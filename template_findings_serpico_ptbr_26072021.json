[{"id":21,"title":"A1 - Cross-site Scripting (XSS)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Owasp Top 10 - 2017","overview":"<paragraph>O Cross-Site Scripting (XSS) é um dos ataques mais comumente executados contra uma ampla gama de aplicações web. O conceito de XSS é manipular uma aplicação web por meio de scripts no lado cliente (client side), a fim de forçar a aplicação atacada a executar determinadas ações em outros clientes que se conectam a ela, conforme instruído pelo atacante. </paragraph><paragraph>Um exemplo clássico de XSS ocorre quando um atacante pode, por exemplo, injetar um script mal-intencionado em um comentário de um blog. Assim, quando um usuário legítimo acessa a página que contém o script com código malicioso, o navegador do usuário interpretará esse script e executará as operações definidas nele. </paragraph><paragraph>Entre as operações que podem ser executadas por meio de um script malicioso, se incluem a captura de cookies de sessão (ou tokens de sessão) de usuários legítimos, para conduzir ataques de sequestro de sessão.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se a sanitização dos parâmetros utilizados na página em evidência. Essa ação terá como objetivo filtrar o dado recebido e prevenir a exploração da vulnerabilidade presente. </paragraph><paragraph>Adicionalmente, é indicado validar todos os dados de entrada fornecidos pelos usuários nos campos de entrada de parâmetros e filtrar os dados que podem ser exibidos novamente na tela, evitando que ações, como códigos Java Script e tags HTML sejam injetados e executados pelos navegadores do usuário final. </paragraph><paragraph>Também se acredita que seja aplicável considerar utilizar um WAF (Web Application Firewall) para auxiliar na proteção contra essa vulnerabilidade.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)</paragraph>","approved":true,"risk":2,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":22,"title":"A2 - Quebra de Autenticação","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"OWASP TOP TEN","overview":"<paragraph>Os ataques de quebra de autenticação permitem que os atacantes ganhem acesso a área autenticada da mesma, por ter acesso a centenas de milhões de combinações válidas de nome de usuário e senha para preenchimento de credenciais, listas de contas administrativas padrão, força bruta automatizada e ferramentas de ataque de dicionário. Os ataques de gerenciamento de sessões são bem compreendidos, principalmente em relação aos tokens de sessão não expirados.</paragraph><paragraph>Os invasores precisam obter acesso a apenas algumas contas ou apenas uma conta de administrador para comprometer o sistema. Dependendo do domínio do aplicativo, isso pode permitir lavagem de dinheiro, roubo de identidade ou divulgar informações altamente confidenciais protegidas por lei.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Sempre que possível, implementar mecanismos de autenticação de dois fatores, de forma a prevenir ataques automatizados de força bruta e reutilização de credenciais roubadas. Outras recomendações são:</paragraph><paragraph><bullet>Não publicar a aplicação com credenciais pré-definidas, em especial para  usuários com perfil de administrador.</bullet></paragraph><paragraph><bullet>Implementar verificações de senhas fracas, tais como comparar as senhas novas ou alteradas com a lista das Top 10000 piores senhas.</paragraph><paragraph><bullet>Assegurar que o registro, recuperação de credenciais e API estão preparados para resistir a ataques de enumeração de contas usando as mesmas mensagens para todos os resultados (sucesso/insucesso).</bullet></paragraph><paragraph><bullet>Limitar o número máximo de tentativas de autenticação falhas, ou atrasar progressivamente esta operação. </paragraph><paragraph><bullet>Registrar todas as falhas e alertar os administradores quando detectados</paragraph><paragraph>ataques de força bruta.</bullet></paragraph><paragraph>Usar, no servidor, um gestor de sessões seguro que gere novos identificadores de sessão aleatórios e com elevado nível de entropia após a autenticação. Os identificadores de sessão não devem constar no URL, devem ser guardados de</paragraph><paragraph>forma segura e invalidados após o logout, por inatividade e ao fim dum período de tempo fixo.</paragraph>","references":"<paragraph></paragraph>","approved":true,"risk":3,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":23,"title":"A1 - Injeção de SQL","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Planned","type":"Owasp Top 10 - 2017","overview":"<paragraph>O ataque de injeção SQL consiste na inserção, ou &quot;&quot;injeção&quot;&quot;, de uma consulta SQL por meio dos dados de entrada do cliente para a aplicação. Uma exploração de injeção SQL bem-sucedida pode ler dados confidenciais do banco de dados, modificar dados do banco de dados (inserir/ atualizar/excluir), executar operações de administração no banco de dados (como desligar o DBMS), recuperar o conteúdo de um determinado arquivo presente no arquivo DBMS sistema e, em alguns casos, emitir comandos para o sistema operacional.</paragraph><paragraph>Um atacante gera dados de entrada específicos para determinados parâmetros na aplicação, presentes nas requisições HTTP GET/POST e se aproveita do fato de a aplicação concatenar as queries de consulta ao banco de dados aos valores previamente utilizados por esses parâmetros. Ao submeter os valores com as consultas concatenadas, o atacante é capaz de obter acesso ao conteúdo existente nas bases dos bancos de dados utilizados pela aplicação e, consequentemente executar queries/códigos legítimos no banco de dados que serão interpretados pelo gerenciador de banco de dados como queries/códigos autênticos.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>As melhores práticas para trabalhar na prevenção do ataque de SQL Injection são a Parametrização das consultas e a validação das entradas (inputs) com whitelists. O tratamento dos dados de entrada maliciosos deve ser realizado de forma iterativa (loop): enquanto os dados possuírem algum valor caracterizado como malicioso é necessário realizar o tratamento dos dados sempre após o decoding (Base64, URL, Unicode, etc) do conteúdo. </paragraph><paragraph>Por fim, um processo de desenvolvimento seguro (sSDLC) deve ser adotado para que controles de autenticação, sanitização e verificação de dados, sejam implementados ainda durante o desenvolvimento.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/SQL_Injection</paragraph>","approved":true,"risk":3,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":24,"title":"A1 - Cross-Site Scripting (Refletido)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Owasp Top 10 - 2017","overview":"<paragraph>O ataque de Cross-Site Scripting é um ataque do tipo injeção, no qual o atacante insere tags maliciosos por meio de parâmetros HTTP, URI, cookies ou outros pontos manipuláveis no cabeçalho HTTP que acabam por ser inseridos no formulário DOM (HTML). Por fim, a inserção destas tags maliciosas acaba por executar códigos Javascripts do lado do usuário ou referenciar códigos hospedados em servidores remotos, de forma autêntica e, com as permissões idênticas aos códigos originais da aplicação web. </paragraph><paragraph>A execução destes códigos permite à um atacante o envio de URI’s com códigos Javascript que acabam por ser refletidos no browser da vítima, o qual realiza a execução destes códigos. </paragraph><paragraph>Ataques refletidos são aqueles em que o script injetado é refletido no servidor da Web, como em uma mensagem de erro, resultado da pesquisa ou qualquer outra resposta que inclua parte ou toda a entrada enviada ao servidor como parte da solicitação. Eles podem ser entregues às vítimas por meio de uma mensagem de email ou em outro site. Quando um usuário é enganado a clicar em um link malicioso, enviar um formulário especialmente criado ou até mesmo navegar em um site malicioso, o código injetado viaja para o site vulnerável, o que reflete o ataque ao navegador do usuário. O navegador então executa o código porque veio de um servidor &quot;confiável&quot;. O XSS refletido também é conhecido como XSS não persistente ou tipo II.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A solução para vulnerabilidades de Cross-Site Scripting consiste na incorporação das seguintes recomendações:</paragraph><paragraph>1)\tNão realizar a inserção de conteúdo inserido em parâmetros manipuláveis (e.g. Headers HTTP) em locais do formulário DOM/HTML. Exemplo: inserção de conteúdo preenchido em parâmetros HTTP GET em tags script, em comentários HTML, em nomes de atributos, em nomes de tags, em tags style.</paragraph><paragraph>2)\tImplementação de funções de escaping para verificar a inserção de caracteres maliciosos em pontos do formulário HTTP que recebem conteúdo manipulável pelo cliente (e.g. parâmetros GET). Recomendações de escaping/conversão de caracteres:</paragraph><paragraph> &amp; --&gt; &amp;amp;</paragraph><paragraph> &lt; --&gt; &amp;lt;</paragraph><paragraph> &gt; --&gt; &amp;gt;</paragraph><paragraph> &quot; --&gt; &amp;quot;</paragraph><paragraph> &#39; --&gt; &amp;#x27;     </paragraph><paragraph>3)\tImplementação de wordlists para restringir caracteres possíveis de preenchimento em parâmetros manipuláveis pelo cliente. Exemplo: permitir apenas caracteres alfanuméricos. </paragraph><paragraph>4)\tImplementa a flag HTTPOnly nas respostas às requisições. Esta flag inviabiliza o acesso aos cookies de sessão por possíveis códigos Javascript.</paragraph><paragraph>5)\tImplementa o cabeçalho Content Security Policy, restringindo ao browser quais domínios são permitidos de terem seus códigos Javascript incorporados ao formulário DOM/HTML.</paragraph><paragraph>6)\tImplementa o cabeçalho X-XSS Protection, o qual habilita funções nativas do browser do cliente à utilizar métodos de prevenção à injeções de Cross-Site Scripting.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)</paragraph>","approved":true,"risk":2,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":25,"title":"A1 - Cross-site Scripting (Stored)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Owasp Top 10 - 2017","overview":"<paragraph>O Cross-Site Scripting (XSS) é um dos ataques mais comumente executados contra uma ampla gama de aplicações web. O conceito de XSS é manipular uma aplicação web por meio de scripts no lado cliente (client side), a fim de forçar a aplicação atacada a executar determinadas ações em outros clientes que se conectam a ela, conforme instruído pelo atacante. </paragraph><paragraph>Um exemplo clássico de XSS ocorre quando um atacante pode, por exemplo, injetar um script mal-intencionado em um comentário de um blog. Assim, quando um usuário legítimo acessa a página que contém o script com código malicioso, o navegador do usuário interpretará esse script e executará as operações definidas nele. </paragraph><paragraph>Ataques armazenados (stored) são aqueles em que o script injetado é permanentemente armazenado nos servidores de destino, como em um banco de dados, em um fórum de mensagens, log de visitantes, campo de comentários etc. A vítima recupera o script malicioso do servidor quando solicita o armazenamento. em formação. O XSS armazenado também é conhecido como XSS Persistente.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A solução para vulnerabilidades de Cross-Site Scripting consiste na incorporação das seguintes recomendações:</paragraph><paragraph>1)\tNão realizar a inserção de conteúdo inserido em parâmetros manipuláveis (e.g. Headers HTTP) em locais do formulário DOM/HTML. Exemplo: inserção de conteúdo preenchido em parâmetros HTTP GET em tags script, em comentários HTML, em nomes de atributos, em nomes de tags, em tags style.</paragraph><paragraph>2)\tImplementação de funções de escaping para verificar a inserção de caracteres maliciosos em pontos do formulário HTTP que recebem conteúdo manipulável pelo cliente (e.g. parâmetros GET). Recomendações de escaping/conversão de caracteres:</paragraph><paragraph> &amp; --&gt; &amp;amp;</paragraph><paragraph> &lt; --&gt; &amp;lt;</paragraph><paragraph> &gt; --&gt; &amp;gt;</paragraph><paragraph> &quot; --&gt; &amp;quot;</paragraph><paragraph> &#39; --&gt; &amp;#x27;     </paragraph><paragraph>3)\tImplementação de wordlists para restringir caracteres possíveis de preenchimento em parâmetros manipuláveis pelo cliente. Exemplo: permitir apenas caracteres alfanuméricos. </paragraph><paragraph>4)\tImplementa a flag HTTPOnly nas respostas às requisições. Esta flag inviabiliza o acesso aos cookies de sessão por possíveis códigos Javascript.</paragraph><paragraph>5)\tImplementa o cabeçalho Content Security Policy, restringindo ao browser quais domínios são permitidos de terem seus códigos Javascript incorporados ao formulário DOM/HTML.</paragraph><paragraph>6)\tImplementa o cabeçalho X-XSS Protection, o qual habilita funções nativas do browser do cliente à utilizar métodos de prevenção à injeções de Cross-Site Scripting.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)</paragraph>","approved":true,"risk":2,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":26,"title":"A3 - Exposição de Dados Sensíveis","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Owasp Top 10 - 2017","overview":"<paragraph>É uma vulnerabilidade que acontece quando recursos como aplicações web são configurados incorretamente para o propósito da aplicação. Alguns exemplos são quando existem dados desprotegidos, páginas que não são utilizadas ou recursos que vem por padrão com usuário e senha padrão do fabricante. Muitas vezes essas informações são úteis para os atacantes, visto que elas revelam detalhes de implementações ou informações úteis para explorar uma outra vulnerabilidade.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Classifique os dados processados, armazenados ou transmitidos por um aplicativo. Identifique quais dados são sensíveis de acordo com as leis de privacidade, requisitos regulatórios ou necessidades de negócios.</paragraph><paragraph>Certifique-se de criptografar todos os dados confidenciais em repouso.</paragraph><paragraph>Garantir que algoritmos, protocolos e chaves padrão atualizados e fortes estejam em vigor; use o gerenciamento de chaves adequado.</paragraph><paragraph>Criptografe todos os dados em trânsito com protocolos seguros, como TLS, com cifras PFS (Perfect Forward Secrecy), priorização de cifra pelo servidor e parâmetros seguros. Aplique a criptografia usando diretivas como HTTP Strict Transport Security (HSTS).</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure</paragraph>","approved":true,"risk":2,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":27,"title":"A4 - Entidades Externas de XML (XXE)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Planned","type":"Owasp Top 10 - 2017","overview":"<paragraph>A inclusão de entidade XML externa é um ataque característico de aplicações que realizam o tratamento de entradas XML. O ataque ocorre quando é realizada a inserção de uma entidade externa em um formulário contendo estruturas XML, de forma que esta entidade seja processada pela aplicação. </paragraph><paragraph>Este ataque pode levar à exposição de informações sensíveis graças ao processamento de entidades externas XML contendo referências à arquivos internos do servidor ou de compartilhamentos SMB. Também possibilita a realização de requisições HTTP à servidores internos, devido à inserção de entidades externas referenciando servidores internos por meio do protocolo HTTP.</paragraph><paragraph>Em aplicações PHP, a vulnerabilidade também possibilita a execução de comandos remotos no servidor vulnerável, utilizando a função nativa expect, a qual possibilita a execução de comandos de sistema operacional.</paragraph><paragraph>A exploração de vulnerabilidades de processamento de entidade externa XML não é restrita à exploração de protocolos SMB ou HTTP, mas também possibilita a exploração de protocolos SSH, FTP, LDAP, SMTP, a depender da implementação destes protocolos no framework explorado.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A vulnerabilidade Entidade Externa XML ocorre frequentemente em aplicações Java, visto que grande parte das bibliotecas que realizam o processamento de formulários XML possuem a opção de processamento de entidades externas habilitadas por padrão. Portanto, a solução para a vulnerabilidade reside na declaração da instância responsável pelo processamento da estrutura XML com opção para processamento de entidade externa declarada como false. </paragraph><paragraph>A maneira mais segura de impedir XXE é sempre desativar completamente as DTDs (entidades externas). Dependendo do parser, o método deve ser semelhante ao seguinte:</paragraph><paragraph>[[[ factory.setFeature(&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;, true); ]]]</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing</paragraph><paragraph>https://cheatsheetseries.owasp.org/cheatsheet /XML_External_Entity_Prevention_Cheat_Sheet.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":28,"title":"API1 - Quebra de Autorização de Objeto","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Planned","type":"OWASP API Security Top 10 - 2019","overview":"<paragraph>Atacantes podem explorar endpoints de API vulneráveis, manipulando o ID de um objeto que é enviado dentro da solicitação. Isso pode levar ao acesso não autorizado a dados confidenciais. Esse problema é extremamente comum em aplicativos baseados em API porque o componente do servidor geralmente não rastreia completamente o estado do cliente e, em vez disso, depende mais de parâmetros como IDs de objeto, que são enviados pelo cliente para decidir quais objetos acessar.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>• Implemente um mecanismo de autorização adequado que dependa das políticas e hierarquia do usuário. </paragraph><paragraph>• Prefira não usar um ID que foi enviado do cliente, mas use um ID armazenado no objeto de sessão ao acessar um registro de banco de dados pelo ID do registro. </paragraph><paragraph>• Use um mecanismo de autorização para verificar se o usuário conectado tem acesso para executar a ação solicitada no registro em todas as funções que usam uma entrada do cliente para acessar um registro no banco de dados. </paragraph><paragraph>• Prefira usar valores aleatórios e imprevisíveis como GUIDs para os IDs dos registros. </paragraph><paragraph>• Escreva testes para avaliar o mecanismo de autorização e não implante alterações vulneráveis que interrompam os testes.</paragraph>","references":"<paragraph>https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa1-broken-object-level-authorization.md</paragraph>","approved":true,"risk":3,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":29,"title":"API2 - Quebra de Autenticação","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"OWASP API Security Top 10 - 2019","overview":"<paragraph>Os ataques de quebra de autenticação permitem que os atacantes ganhem acesso a área autenticada da mesma, por ter acesso a centenas de milhões de combinações válidas de nome de usuário e senha para preenchimento de credenciais, listas de contas administrativas padrão, força bruta automatizada e ferramentas de ataque de dicionário. </paragraph><paragraph>Os invasores precisam obter acesso a apenas algumas contas ou apenas uma conta de administrador para comprometer o sistema. Dependendo do domínio do aplicativo, isso pode permitir lavagem de dinheiro, roubo de identidade ou divulgar informações altamente confidenciais protegidas por lei.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph><bullet>Certifique-se de conhecer todos os fluxos possíveis para autenticação na API (links móveis / web / diretos que implementam autenticação com um clique / etc)</bullet></paragraph><paragraph><bullet>Leia sobre seus mecanismos de autenticação. Certifique-se de entender o que e como eles são usados. OAuth não é autenticação e nem chaves de API.</bullet></paragraph><paragraph><bullet>Ao desenvolver soluções de autenticação, geração de token e armazenamento de senha, use padrões de mercado.</bullet></paragraph><paragraph><bullet>Os endpoints de recuperação de senha, devem ser tratados como endpoints de login em termos de força bruta, limite de taxa e proteções de bloqueio.</bullet></paragraph><paragraph><bullet>Sempre que possível, implemente a autenticação de dois fatores.</bullet></paragraph><paragraph><bullet>Implemente mecanismos anti força bruta para mitigar o preenchimento de credenciais, ataques de dicionário e ataques de força bruta em seus pontos de extremidade de autenticação. Esse mecanismo deve ser mais rígido que o mecanismo de limitação de taxa regular na sua API.</bullet></paragraph><paragraph><bullet>Implemente o mecanismo de bloqueio / captura de conta para evitar força bruta contra usuários específicos. Implemente verificações de senhas fracas.</bullet></paragraph><paragraph><bullet>As chaves de API não devem ser usadas para autenticação do usuário, mas para autenticação de aplicativo / projeto do cliente.</bullet></paragraph>","references":"<paragraph></paragraph>","approved":true,"risk":3,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":30,"title":"API3 - Excesso de Exposição de Dados ","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"OWASP API Security Top 10 - 2019","overview":"<paragraph>A API retorna dados confidenciais para o cliente por design. Esses dados geralmente são filtrados no lado do cliente antes de serem apresentados ao usuário. Um invasor pode facilmente detectar o tráfego e ver os dados confidenciais. Como as APIs são usadas como fontes de dados, às vezes os desenvolvedores tentam implementá-las de maneira genérica, sem pensar na sensibilidade dos dados expostos. </paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph><bullet>Não execute a filtragem de dados confidenciais client-side. Revise as respostas das requisições da API para garantir que elas contenham apenas dados legítimos.</bullet></paragraph><paragraph><bullet>Defina e aplique explicitamente os dados retornados por todos os métodos da API, incluindo erros. Sempre que possível use esquemas para respostas, padrões para todas as cadeias e limpe os nomes dos campos.</paragraph><paragraph><bullet>Defina todas as informações confidenciais e identificáveis pessoalmente (PII) com as quais seu aplicativo armazena e trabalha e revise todas as chamadas de API retornando essas informações para verificar se essas respostas podem ser um problema de segurança.</bullet></paragraph>","references":"<paragraph>https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa3-excessive-data-exposure.md</paragraph>","approved":true,"risk":3,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":31,"title":"API4 - Falta de Recursos e Limitação de Taxa de Requisições","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"OWASP API Security Top 10 - 2019","overview":"<paragraph>O ataque se dá quando o atacante realiza várias solicitações simultâneas, que podem ser realizadas em um único computador local ou usando recursos de computação em nuvem. Geralmente nenhuma autenticação é necessária. É comum encontrar APIs que não implementam limite de taxa de requisições ou APIs em que os limites não estão definidos corretamente.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph><bullet>Implemente um limite de quantas vezes um cliente pode chamar a API dentro de um prazo definido.</bullet></paragraph><paragraph><bullet>Para operações confidenciais, como redefinição de login ou senha, considere limites de taxa pelo método API (por exemplo, autenticação), cliente (por exemplo, endereço IP), propriedade (por exemplo, nome de usuário).</bullet></paragraph><paragraph><bullet>Notifique o cliente quando o limite for excedido, fornecendo o número do limite e a hora em que o limite será redefinido.</bullet></paragraph><paragraph><bullet>Inclua validação adequada do servidor para a cadeia de consulta e os parâmetros do corpo da solicitação, especificamente aquele que controla o número de registros a serem retornados na resposta.</bullet></paragraph><paragraph><bullet>Defina e imponha o tamanho máximo dos dados em todos os parâmetros, como comprimento máximo para cadeias e número máximo de elementos em matrizes.</paragraph><paragraph><bullet>Se sua API aceitar arquivos compactados, verifique as taxas de compactação antes de expandir os arquivos para se proteger contra &quot;zip bombs&quot;.</bullet></paragraph>","references":"<paragraph>https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa4-lack-of-resources-and-rate-limiting.md</paragraph>","approved":true,"risk":2,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":32,"title":"API5 - Quebra de Função de Nível de Autorização","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"OWASP API Security Top 10 - 2019","overview":"<paragraph>A falha permite que o atacante envie requisições de API legítimas para a API ao qual não deve ter acesso. Esses endpoints podem ser expostos a usuários anônimos ou usuários regulares e sem privilégios. É mais fácil descobrir essas falhas nas APIs, pois as APIs são mais padronizadas, e a maneira de acessar determinadas funções é mais previsível (por exemplo, substituindo o método HTTP de GET para PUT ou alterando a string &quot;users&quot; na URL para &quot;admins&quot; ou alterando o valor de um parâmetro como &quot;is_admin&quot; de &quot;false&quot; para &quot;true&quot;).</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A aplicação deve ter um módulo de autorização consistente e fácil de analisar, utilizado em todas as suas funções de negócios. Frequentemente, essa proteção é fornecida por um ou mais componentes externos ao código do aplicativo, como em frameworks, por exemplo. Para remediar essa falha, é recomendado que:</paragraph><paragraph><bullet>O(s) mecanismo (s) de aplicação deve negar todo o acesso por padrão, exigindo concessões explícitas para funções específicas para acesso a todas as funções.</bullet></paragraph><paragraph><bullet>Revise os endpoints da API em relação a falhas de autorização no nível da função, mantendo em mente a lógica comercial da hierarquia de aplicativos e grupos.</bullet></paragraph>","references":"<paragraph>https://github.com/OWASP/API-Security/blob/master/2019/en/src/0xa5-broken-function-level-authorization.md</paragraph>","approved":true,"risk":2,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":33,"title":"“App Transport Security” Habilitado","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":0,"effort":"Quick","type":"Mobile","overview":"<paragraph>Foi extraída uma informação do arquivo .ipa do aplicativo - onde foi acessado o arquivo com o nome Info.plist, onde a chave &quot;NSExeptionAllowsInsecureHTTPLoads&quot; estava ativada, &quot;true&quot;.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph></paragraph>","references":"<paragraph></paragraph>","approved":true,"risk":3,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":0.0,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":0.0,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":34,"title":"Directory Listing","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>A aplicação apresenta listagem de diretório habilitada para seus diretórios internos. Um atacante é capaz de visualizar os recursos existentes dentro do sistema de arquivos do servidor web.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se desabilitar a listagem de diretório para a aplicação utilizada. </paragraph><paragraph>Exemplo: Servidor Apache.</paragraph><paragraph>&lt;Directory /var/www/&gt; </paragraph><paragraph>Options Indexes FollowSymLinks </paragraph><paragraph>AllowOverride None </paragraph><paragraph>Require all granted </paragraph><paragraph>&lt;/Directory&gt;</paragraph><paragraph>Para</paragraph><paragraph>&lt;Directory /var/www/&gt; </paragraph><paragraph>Options Indexes FollowSymLinks </paragraph><paragraph>AllowOverride None </paragraph><paragraph>Require all granted </paragraph><paragraph>&lt;/Directory&gt;</paragraph><paragraph>1.Abra o IIS e navegue até sua aplicação, até a pasta que deseja configurar. </paragraph><paragraph>2.Em &quot;&quot;Features View&quot;&quot;, clique em &quot;&quot;Directory Browsing&quot;&quot;. </paragraph><paragraph>3.No lado direito em Actions você pode habilitar ou desabilitar a listagem, podendo também configurar permissões.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":35,"title":"XML External Entities (XXE)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Planned","type":"Web Application","overview":"<paragraph>A vulnerabilidade de XML External Entities (XXE) é um ataque característico de aplicações que realizam o tratamento de inputs XML. O ataque ocorre quando é realizada a inserção de uma entidade externa em um formulário contendo estruturas XML, de forma que esta entidade seja processada pela aplicação. </paragraph><paragraph></paragraph><paragraph>Este ataque pode levar à exposição de informações sensíveis graças ao processamento de external entities XML contendo referências à arquivos internos do servidor ou de compartilhamentos SMB. </paragraph><paragraph></paragraph><paragraph>Também possibilita a realização de requisições HTTP à servidores internos, devido à inserção de external entities fazendo referência a servidores internos.</paragraph><paragraph></paragraph><paragraph>Em aplicações PHP, a vulnerabilidade também possibilita a execução de comandos remotos no servidor vulnerável, utilizando a função nativa &quot;expect&quot;, a qual possibilita a execução de comandos de sistema operacional.</paragraph><paragraph></paragraph><paragraph>A exploração desse tipo de vulnerabilidade não é restrita à exploração de protocolos SMB ou HTTP, mas também possibilita a exploração de protocolos SSH, FTP, LDAP, SMTP, a depender da implementação destes protocolos no framework explorado.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A vulnerabilidade de XML External Entities ocorre frequentemente em aplicações Java, visto que grande parte das bibliotecas que realizam o processamento de formulários XML possuem a opção de processamento de External Entities habilitadas por padrão. </paragraph><paragraph></paragraph><paragraph>Portanto, a solução para a vulnerabilidade reside na declaração da instância responsável pelo processamento da estrutura XML com opção para processamento de External Entities declarada como false. </paragraph><paragraph></paragraph><paragraph>A maneira mais segura de impedir XXE é sempre desativar completamente as DTDs (entidades externas). Dependendo do parser, o método deve ser semelhante ao seguinte:</paragraph><paragraph>[[[ factory.setFeature(&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;, true); ]]]</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing</paragraph><paragraph>https://cheatsheetseries.owasp.org/cheatsheet /XML_External_Entity_Prevention_Cheat_Sheet.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":36,"title":"Cross-site Scripting (XSS)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>O Cross-Site Scripting (XSS) é um dos ataques mais comumente executados contra uma ampla gama de aplicações web. O conceito de XSS é manipular uma aplicação web por meio de scripts no lado cliente (client side), a fim de forçar a aplicação atacada a executar determinadas ações em outros clientes que se conectam a ela, conforme instruído pelo atacante. </paragraph><paragraph></paragraph><paragraph>Um exemplo clássico de XSS ocorre quando um atacante pode, por exemplo, injetar um script mal-intencionado em um comentário de um blog. Assim, quando um usuário legítimo acessa a página que contém o script com código malicioso, o navegador do usuário interpretará esse script e executará as operações definidas nele. </paragraph><paragraph></paragraph><paragraph>Entre as operações que podem ser executadas por meio de um script malicioso, se incluem a captura de cookies de sessão (ou tokens de sessão) de usuários legítimos, para conduzir ataques de sequestro de sessão.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se a sanitização dos parâmetros utilizados na página em evidência. Essa ação terá como objetivo filtrar o dado recebido e prevenir a exploração da vulnerabilidade presente. </paragraph><paragraph></paragraph><paragraph>Adicionalmente, é indicado validar todos os dados de entrada fornecidos pelos usuários nos campos de entrada de parâmetros e filtrar os dados que podem ser exibidos novamente na tela, evitando que ações, como códigos Java Script e tags HTML sejam injetados e executados pelos navegadores do usuário final. </paragraph><paragraph></paragraph><paragraph>Também se acredita que seja aplicável considerar utilizar um WAF (Web Application Firewall) para auxiliar na proteção contra essa vulnerabilidade.</paragraph>","references":"<paragraph>https://owasp.org/www-community/attacks/xss/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":37,"title":"Cross-Site Scripting (Reflected)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>O ataque de Cross-Site Scripting é um ataque do tipo injeção, no qual o atacante insere tags maliciosos por meio de parâmetros HTTP, URI, cookies ou outros pontos manipuláveis no cabeçalho HTTP que acabam por ser inseridos no formulário DOM (HTML). </paragraph><paragraph></paragraph><paragraph>Por fim, a inserção destas tags maliciosas acaba por executar códigos Javascripts do lado do usuário ou referenciar códigos hospedados em servidores remotos, de forma autêntica e, com as permissões idênticas aos códigos originais da aplicação web. </paragraph><paragraph></paragraph><paragraph>A execução destes códigos permite à um atacante o envio de URI’s com códigos Javascript que acabam por ser refletidos no browser da vítima, o qual realiza a execução destes códigos. </paragraph><paragraph></paragraph><paragraph>Ataques refletidos são aqueles em que o script injetado é refletido no servidor da Web, como em uma mensagem de erro, resultado da pesquisa ou qualquer outra resposta que inclua parte ou toda a entrada enviada ao servidor como parte da solicitação. Eles podem ser entregues às vítimas por meio de uma mensagem de email ou em outro site. </paragraph><paragraph></paragraph><paragraph>Quando um usuário é enganado a clicar em um link malicioso, enviar um formulário especialmente criado ou até mesmo navegar em um site malicioso, o código injetado viaja para o site vulnerável, o que reflete o ataque ao navegador do usuário. </paragraph><paragraph></paragraph><paragraph>O navegador então executa o código porque veio de um servidor &quot;confiável&quot;. O XSS refletido também é conhecido como XSS não persistente ou tipo II.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A solução para vulnerabilidades de Cross-Site Scripting consiste na incorporação das seguintes recomendações:</paragraph><paragraph>1)\tNão realizar a inserção de conteúdo inserido em parâmetros manipuláveis (e.g. Headers HTTP) em locais do formulário DOM/HTML. Exemplo: inserção de conteúdo preenchido em parâmetros HTTP GET em tags script, em comentários HTML, em nomes de atributos, em nomes de tags, em tags style.</paragraph><paragraph>2)\tImplementação de funções de escaping para verificar a inserção de caracteres maliciosos em pontos do formulário HTTP que recebem conteúdo manipulável pelo cliente (e.g. parâmetros GET). Recomendações de escaping/conversão de caracteres:</paragraph><paragraph> &amp; --&gt; &amp;amp;</paragraph><paragraph> &lt; --&gt; &amp;lt;</paragraph><paragraph> &gt; --&gt; &amp;gt;</paragraph><paragraph> &quot; --&gt; &amp;quot;</paragraph><paragraph> &#39; --&gt; &amp;#x27;     </paragraph><paragraph>3)\tImplementação de wordlists para restringir caracteres possíveis de preenchimento em parâmetros manipuláveis pelo cliente. Exemplo: permitir apenas caracteres alfanuméricos. </paragraph><paragraph>4)\tImplementa a flag HTTPOnly nas respostas às requisições. Esta flag inviabiliza o acesso aos cookies de sessão por possíveis códigos Javascript.</paragraph><paragraph>5)\tImplementa o cabeçalho Content Security Policy, restringindo ao browser quais domínios são permitidos de terem seus códigos Javascript incorporados ao formulário DOM/HTML.</paragraph><paragraph>6)\tImplementa o cabeçalho X-XSS Protection, o qual habilita funções nativas do browser do cliente à utilizar métodos de prevenção à injeções de Cross-Site Scripting.</paragraph>","references":"<paragraph>https://owasp.org/www-community/attacks/xss/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":38,"title":"Sensitive Data Exposure","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>É uma vulnerabilidade que acontece quando recursos como aplicações web são configurados incorretamente para o propósito da aplicação. Alguns exemplos são quando existem dados desprotegidos, páginas que não são utilizadas ou recursos que vem por padrão com usuário e senha padrão do fabricante. </paragraph><paragraph></paragraph><paragraph>Muitas vezes essas informações são úteis para os atacantes, visto que elas revelam detalhes de implementações ou informações úteis para explorar uma outra vulnerabilidade.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Classifique os dados processados, armazenados ou transmitidos por uma aplicação e depois identifique quais dados são sensíveis de acordo com as leis de privacidade, requisitos regulatórios ou necessidades de negócios e de acordo com a situação, restrinja o acesso desses dados.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":39,"title":"Web Parameter Tampering","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>Baseia-se na manipulação de parâmetros trocados entre cliente e servidor para modificar os dados do aplicativo, tais como: credenciais e permissões de usuário, preço e quantidade de produtos etc. </paragraph><paragraph></paragraph><paragraph>Geralmente, essas informações são armazenadas em cookies, de forma oculta em campos ou cadeias de consulta de URL e é usado para aumentar a funcionalidade e o controle do aplicativo.</paragraph><paragraph></paragraph><paragraph>Esse ataque explora a confiança que muitos desenvolvedores depositam em campos ocultos ou fixos (como uma tag oculta em um formulário ou um parâmetro em uma URL) como a única medida de segurança para determinadas operações. Sendo assim, o atacante pode modificar esses parâmetros para ignorar os mecanismos de segurança que dependem deles ou simplesmente modificar a forma como a aplicação tende a se comportar.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A prevenção deste ataque envolve a devida validação de todos os parâmetros, com o objetivo de garantir que estejam em conformidade com o que é de fato necessário para o funcionamento da aplicação, tais como: </paragraph><paragraph></paragraph><paragraph>Especificar o comprimento mínimo e máximo permitido para determinados campos, definir o intervalo numérico permitido, bem como a sequência e padrões de caracteres permitidos, validar se determinado parâmetro é realmente necessário para realizar determinada transação etc.</paragraph><paragraph>Um WAF também pode fornecer certa proteção contra “parameter tampering”, desde que esteja configurado corretamente para o site em uso.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Web_Parameter_Tampering</paragraph><paragraph>https://www.imperva.com/learn/application-security/parameter-tampering/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":40,"title":"Broken Authentication - Token","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>A aplicação apresenta função de autenticação para utilização dos recursos existentes na mesma. Por meio do envio das credenciais de usuário para realização de autenticação é possível a geração de um token, passível de incorporação ao cabeçalho das requisições enviadas ao servidor (Authorization ou Cookie). O token gerado permite a utilização de recursos disponíveis apenas a usuários autenticados ou recursos referentes à manipulação de informação relacionada ao usuário em questão.</paragraph><paragraph>A aplicação apresenta comportamento falho ou inexistente de invalidação do token após longos períodos de inutilização das funções da aplicação - de forma a não indisponibilizar o uso do valor de token de usuário inserido nos cabeçalhos de sessão caso não seja realizada utilização da aplicação por longos intervalos de tempo – dias, meses consecutivos. Desta forma é possível a utilização de token’s anteriormente gerados ainda após alterações de configuração de conta (e.g. alteração de senha), garantindo acesso irrestrito às funções da aplicação após uma autenticação válida.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A recomendação para a correção da vulnerabilidade baseia-se na criação de valores de timeouts para os tokens de sessão emitidos para a aplicação, gerando a invalidação destes após períodos de inutilização. </paragraph><paragraph>É necessário a criação de um campo referente à máxima data de uso deste token e, a cada tentativa de utilização deve-se realizar a verificação da possibilidade de uso, ou seja, data máxima de utilização não atingida. </paragraph><paragraph>Deve-se mencionar que as datas de invalidação de tokens devem ser válidas (e.g. posteriores a data de emissão), garantindo o funcionamento correto da aplicação, de forma a garantir que a condição de anulação do token seja passível de ser atingida ao especificar uma data posterior à sua data de geração.</paragraph><paragraph>Sugere-se a implementação dos seguintes mecanismos de proteção referentes à valores de sessão de usuários.</paragraph><paragraph><bullet>Expiração Manual de Sessão: A aplicação deve prover um botão de fácil acesso para realização de logout, possibilitando ao usuário a decisão de terminação de sessão e, consequentemente anulação de seu token de sessão por parte do servidor ao qual está armazenado.</bullet></paragraph><paragraph><bullet>Timeout por Ociosidade: Esta função anula o valor de sessão de usuário após períodos de ociosidade. De acordo com o framework OWASP para recomendações e testes de segurança de informação sugere-se valores de timeout de 2-5 minutos para aplicações de alta criticidade, 15-30 minutos para aplicações de média criticidade e, 3 horas para aplicações de baixa criticidade.</bullet></paragraph><paragraph><bullet>Timeout Absoluto: Esta função anula o valor de sessão de usuário independentemente de qualquer interação ou ausência desta para com a aplicação. Aplicações bancários e de serviços de compras devem implementar timeouts absolutos entre valores de 30 – 60 minutos. Contudo, para aplicações não relacionadas a estas categorias, o intervalo de timeout absoluto é variável.</bullet></paragraph><paragraph><bullet>Timeout para Renovação: Após períodos específicos de tempo, a aplicação deve não apenas anular o token emitido, porém, realizar também a emissão de um novo token de sessão.</bullet></paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":41,"title":"Remote File Inclusion (RFI) ","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Planned","type":"Web Application","overview":"<paragraph>A aplicação apresenta uma funcionalidade que permite a solicitação de arquivo em servidores, de forma remota, por meio da referência a um servidor HTTP e um arquivo hospedado neste servidor utilizando um parâmetro GET/POST. </paragraph><paragraph></paragraph><paragraph>A partir de uma requisição HTTP realizada ao servidor, a aplicação consulta o conteúdo existente no arquivo hospedado e executa o conteúdo do arquivo no servidor local. </paragraph><paragraph></paragraph><paragraph>A depender do conteúdo existente no arquivo é possível realizar a execução remota de código neste servidor ao hospedar um arquivo contendo um código interpretável pela aplicação HTTP, o qual passa a ser executado pelo servidor vulnerável.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>As melhores práticas para trabalhar na prevenção de ataques de inclusão remota de arquivo são referentes à não utilização de procedimentos de referência à arquivos remotos por meio de parâmetros HTTP GET/POST; ou seja, não permitir a manipulação do usuário da aplicação dos parâmetros responsáveis pela realização de requisição a servidores remotos. </paragraph><paragraph></paragraph><paragraph>Portanto, recomenda-se a criação de um identificador, o qual seria utilizado no parâmetro HTTP, responsável pela referência ao servidor remoto. Este identificador preferencialmente deve ser um valor não previsível para usuários – portanto, sugere-se a utilização de valores de hash – e, durante a utilização do recurso da aplicação HTTP, este identificador seria consultado em um banco de dados para obter um servidor e, arquivo, pertencentes e referenciados pelo identificador na base de dados.</paragraph>","references":"<paragraph>https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.2-Testing_for_Remote_File_Inclusion</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":42,"title":"SQL Injection","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Planned","type":"Web Application","overview":"<paragraph>O ataque de injeção SQL consiste na inserção, ou &quot;&quot;injeção&quot;&quot;, de uma consulta SQL por meio dos dados de entrada do cliente para a aplicação. Uma exploração de injeção SQL bem-sucedida pode ler dados confidenciais do banco de dados, modificar dados do banco de dados (inserir/ atualizar/excluir), executar operações de administração no banco de dados (como desligar o DBMS), recuperar o conteúdo de um determinado arquivo presente no arquivo DBMS sistema e, em alguns casos, emitir comandos para o sistema operacional.</paragraph><paragraph></paragraph><paragraph>Um atacante gera dados de entrada específicos para determinados parâmetros na aplicação, presentes nas requisições HTTP GET/POST e se aproveita do fato de a aplicação concatenar as queries de consulta ao banco de dados aos valores previamente utilizados por esses parâmetros. </paragraph><paragraph></paragraph><paragraph>Ao submeter os valores com as consultas concatenadas, o atacante é capaz de obter acesso ao conteúdo existente nas bases dos bancos de dados utilizados pela aplicação e, consequentemente executar queries/códigos legítimos no banco de dados que serão interpretados pelo gerenciador de banco de dados como queries/códigos autênticos.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>As melhores práticas para trabalhar na prevenção do ataque de SQL Injection são a Parametrização das consultas e a validação das entradas (inputs) com whitelists. O tratamento dos dados de entrada maliciosos deve ser realizado de forma iterativa (loop): enquanto os dados possuírem algum valor caracterizado como malicioso é necessário realizar o tratamento dos dados sempre após o decoding (Base64, URL, Unicode, etc) do conteúdo. </paragraph><paragraph></paragraph><paragraph>Por fim, um processo de desenvolvimento seguro (sSDLC) deve ser adotado para que controles de autenticação, sanitização e verificação de dados, sejam implementados ainda durante o desenvolvimento.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/SQL_Injection</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":43,"title":"Path Traversal","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>Um ataque de path traversal visa acessar arquivos e diretórios armazenados fora da pasta raiz do servidor web. Manipulando variáveis que referenciam arquivos com sequências &quot;ponto-ponto-barra (../)&quot; e suas variações ou usando caminhos de arquivo absolutos, pode ser possível acessar arquivos e diretórios arbitrários armazenados no sistema de arquivos, incluindo código-fonte ou configuração do aplicativo e arquivos críticos do sistema.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A maneira mais eficaz de evitar vulnerabilidades transversais no caminho do arquivo é evitar a transmissão de entrada fornecida pelo usuário para as APIs do sistema de arquivos. Muitas funções de aplicativo que fazem isso podem ser reescritas para oferecer o mesmo comportamento de uma maneira mais segura.</paragraph><paragraph>Se for considerado inevitável passar a entrada fornecida pelo usuário para as APIs do sistema de arquivos, duas camadas de defesa devem ser usadas juntas para evitar ataques:</paragraph><paragraph></paragraph><paragraph><bullet>O aplicativo deve validar a entrada do usuário antes de processá-la. Idealmente, a validação deve comparar com uma lista de desbloqueio de valores permitidos. Se isso não for possível para a funcionalidade necessária, a validação deve verificar se a entrada contém apenas conteúdo permitido, como caracteres puramente alfanuméricos.</bullet></paragraph><paragraph><bullet>Após validar a entrada fornecida, o aplicativo deve anexar a entrada ao diretório base e usar uma API do sistema de arquivos da plataforma para canonizar o caminho. Ele deve verificar se o caminho canonizado começa com o diretório base esperado.</bullet></paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Testing_for_Remote_File_Inclusion</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":44,"title":"Insufficient Password Strength","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Best Practice","overview":"<paragraph>A utilização de credenciais de baixa complexidade contribui para a eficiência durante a realização de ataques em duas vertentes possíveis: ataques e técnicas de força bruta e ataques/técnicas de colisão de Hashes. As credenciais de baixa complexidade contribuem para a elaboração de listas comuns (sequências numéricas, alfabéticas, alfanuméricas) ou a utilização de permutações de tamanho reduzido na tentativa de encontrar valores válidos para a realização de login utilizando as credenciais obtidas, por meio de ataques de força bruta. </paragraph><paragraph>Além disso, configurações que não exigem a utilização de números, caracteres especiais e tamanho mínimo durante a composição das senhas contribuem para aumentar a velocidade com que é realizada a descoberta e quebra de possíveis senhas criptografadas obtidas, limitando as “máscaras” (descrição das sequências de caracteres: numérico, alfanumérico, alfabético) utilizadas durante as tentativas de quebra.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se a reformulação das políticas de senhas vigentes, exigindo a alteração das senhas dos usuários registrados na aplicação e possibilitando apenas a inserção de senhas com complexidade média-alta, ou seja, valores de senha com mínimo de 8 caracteres, compostos de valores alfanuméricos e caracteres especiais.</paragraph>","references":"<paragraph>https://cwe.mitre.org/data/definitions/521.html</paragraph><paragraph>https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/07-Testing_for_Weak_Password_Policy</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":45,"title":" CRLF Injection","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>O ataque de CRLF é um dos diversos tipos de ataque de injeção, geralmente utilizado para escalar para outros tipos de ataque mais perigosos como: Cross-Site Scripting (XSS), injeção de conteúdo na página de resposta, envenenamento de cache, manipulação de cache, redirecionamento de usuário, manipulação de Cookies, dentre muitos outros. </paragraph><paragraph>Esta vulnerabilidade permite que um atacante seja capaz de manipular e injetar cabeçalhos HTTP na resposta, ou seja, permite que o atacante seja capaz de definir cabeçalhos da resposta enviada ao cliente ao requisitar uma URL autêntica e vulnerável existente no servidor acessado.</paragraph><paragraph></paragraph><paragraph>O termo CRLF refere-se à Carriage Return e Line Feed. CR e LF são caracteres especiais (ASCII 13 e 10 respectivamente: \\r\\n) utilizados para definir o EOL (End of Line): fim de linha de arquivo. O CRLF é comumente utilizado em sistemas operacionais e protocolos de Internet.</paragraph><paragraph>Por meio dos caracteres CRLF, um atacante é capaz de injetá-los em algum parâmetro disponível na aplicação que esteja sendo inserido em um cabeçalho HTTP, de tal forma que a inserção declara uma nova linha de cabeçalho e permite ao atacante inserir um novo cabeçalho.</paragraph><paragraph>As vulnerabilidades de CRLF são poucos relatadas e mencionadas (estão ausentes no OWASP Top 10 2017).</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A existência desta vulnerabilidade está geralmente relaciona à práticas não recomendadas de desenvolvimento de código, portanto, a mitigação desta falha consiste na adoção de certas recomendações:</paragraph><paragraph><bullet>Refatoração de Código: Nunca incorpore valores preenchidos pelo cliente em parâmetros ou cabeçalhos HTTP da requisição em cabeçalhos HTTP da resposta (Falha comum relacionada à incorporação de valores ao cabeçalho Location).</bullet></paragraph><paragraph><bullet>Remova quaisquer caracteres de adição de nova linha (CR e LF) antes da incorporação de qualquer conteúdo em cabeçalhos HTTP.</bullet></paragraph><paragraph><bullet>Realize o encode (URL encode) da string incorporada em cabeçalhos HTTP.</bullet></paragraph>","references":"<paragraph>https://www.acunetix.com/websitesecurity/crlf-injection/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":46,"title":"Cross-Site Request Forgery (CSRF)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>A falsificação de requisição entre sites (CSRF, Cross-Site Request Forgery) é um ataque que força um usuário final a executar ações indesejadas em um aplicativo da Web no qual ele está autenticado no momento. </paragraph><paragraph></paragraph><paragraph>Os ataques de CSRF visam especificamente as requisições de mudança de estado na aplicação, como por exemplo, uma função de reset de senha. A exploração desta vulnerabilidade pode afetar a disponibilidade da aplicação, visto que é possível indisponibilizar a conta dos usuários, no contexto do usuário comprometido.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Para mitigar essa vulnerabilidade, é fortemente recomendado a implantação da defesa de CSRF baseada em tokens (stateful/stateless) como uma defesa primária para atenuar o CSRF em seus aplicativos.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":47,"title":"Account Enumeration and Guessable User Account","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Best Practice","overview":"<paragraph>Durante a utilização do mecanismo de autenticação ou recuperação de senha, a aplicação apresenta mensagens altamente descritivas, as quais informam caso o usuário inserido no campo de autenticação está cadastrado no Banco de Dados da aplicação e, se este está ativo na aplicação.</paragraph><paragraph></paragraph><paragraph>Um atacante é capaz de utilizar as mensagens descrevendo o estado do usuário (cadastrado e não cadastrado) para a elaboração de listas de usuários existentes no banco de dados da aplicação, possibilitando a enumeração dos mesmo e a criação de ataques mais complexos, possivelmente ao comprometimento posterior da senha dos usuários confirmados existentes e ativados na aplicação.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Para funções de autenticação e recuperação de senha de usuários recomenda-se a utilização de frases idênticas para casos em que o usuário informado e a senha informada sejam inexistentes no banco de dados e, casos em que o usuário informado é existente, porém, a senha não seja condizente com o usuário informado. </paragraph><paragraph></paragraph><paragraph>Sugere-se a implementação das seguintes mensagens para os mecanismos e situações informados:</paragraph><paragraph></paragraph><paragraph><bullet>Mecanismo de Autenticação de Usuários:</bullet></paragraph><paragraph>Usuário Não Existente/Usuário Existente e Senha Inválida: “Usuário ou Senha inválidos.</paragraph><paragraph><bullet>Mecanismo de Recuperação de Senha:</bullet></paragraph><paragraph>E-mail ou Usuário não Existente/E-mail ou Usuário Existentes: “Caso o e-mail informado esteja cadastrado em nosso sistema, um e-mail para redefinição de senha será enviado.</paragraph>","references":"<paragraph>https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":48,"title":"Cross-site Scripting (Stored)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>O Cross-Site Scripting (XSS) é um dos ataques mais comumente executados contra uma ampla gama de aplicações web. O conceito de XSS é manipular uma aplicação web por meio de scripts no lado cliente (client side), a fim de forçar a aplicação atacada a executar determinadas ações em outros clientes que se conectam a ela, conforme instruído pelo atacante. </paragraph><paragraph></paragraph><paragraph>Um exemplo clássico de XSS ocorre quando um atacante pode, por exemplo, injetar um script mal-intencionado em um comentário de um blog. Assim, quando um usuário legítimo acessa a página que contém o script com código malicioso, o navegador do usuário interpretará esse script e executará as operações definidas nele. </paragraph><paragraph></paragraph><paragraph>Ataques armazenados (stored) são aqueles em que o script injetado é permanentemente armazenado nos servidores de destino, como em um banco de dados, em um fórum de mensagens, log de visitantes, campo de comentários etc. </paragraph><paragraph></paragraph><paragraph>A vítima recupera o script malicioso do servidor quando solicita o armazenamento. em formação. O XSS armazenado também é conhecido como XSS Persistente.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A solução para vulnerabilidades de Cross-Site Scripting consiste na incorporação das seguintes recomendações:</paragraph><paragraph></paragraph><paragraph>1)\tNão realizar a inserção de conteúdo inserido em parâmetros manipuláveis (e.g. Headers HTTP) em locais do formulário DOM/HTML. Exemplo: inserção de conteúdo preenchido em parâmetros HTTP GET em tags script, em comentários HTML, em nomes de atributos, em nomes de tags, em tags style.</paragraph><paragraph>2)\tImplementação de funções de escaping para verificar a inserção de caracteres maliciosos em pontos do formulário HTTP que recebem conteúdo manipulável pelo cliente (e.g. parâmetros GET). Recomendações de escaping/conversão de caracteres:</paragraph><paragraph> &amp; --&gt; &amp;amp;</paragraph><paragraph> &lt; --&gt; &amp;lt;</paragraph><paragraph> &gt; --&gt; &amp;gt;</paragraph><paragraph> &quot; --&gt; &amp;quot;</paragraph><paragraph> &#39; --&gt; &amp;#x27;     </paragraph><paragraph>3)\tImplementação de wordlists para restringir caracteres possíveis de preenchimento em parâmetros manipuláveis pelo cliente. Exemplo: permitir apenas caracteres alfanuméricos. </paragraph><paragraph>4)\tImplementa a flag HTTPOnly nas respostas às requisições. Esta flag inviabiliza o acesso aos cookies de sessão por possíveis códigos Javascript.</paragraph><paragraph>5)\tImplementa o cabeçalho Content Security Policy, restringindo ao browser quais domínios são permitidos de terem seus códigos Javascript incorporados ao formulário DOM/HTML.</paragraph><paragraph>6)\tImplementa o cabeçalho X-XSS Protection, o qual habilita funções nativas do browser do cliente à utilizar métodos de prevenção à injeções de Cross-Site Scripting.</paragraph>","references":"<paragraph>https://owasp.org/www-community/attacks/xss/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":49,"title":"Unrestricted File Upload","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>Os arquivos enviados ao servidor representam um risco significativo para as aplicações. O primeiro passo em muitos ataques é obter algum código no sistema a ser atacado. Então o ataque precisa apenas encontrar uma maneira de executar o código. O uso de um upload de arquivo ajuda o invasor a executar a primeira etapa.</paragraph><paragraph></paragraph><paragraph>As consequências do upload irrestrito de arquivos podem variar, incluindo controle completo do sistema, um sistema de arquivos ou banco de dados sobrecarregado, encaminhamento de ataques para sistemas de back-end, ataques do lado do cliente ou desfiguração simples. Depende do que o aplicativo faz com o arquivo carregado e, principalmente, de onde está armazenado.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Assuma que toda a entrada (input) de usuário é maliciosa. Use uma estratégia de validação de entrada, ou seja, use uma lista de permissões de inputs aceitáveis ​​que estejam em conformidade com as especificações. Rejeite qualquer entrada que não esteja estritamente de acordo com as especificações ou a transforme em algo que o faça.</paragraph><paragraph>Por exemplo, limitar nomes de arquivos a caracteres alfanuméricos pode ajudar a restringir a introdução de extensões de arquivo não intencionais.</paragraph>","references":"<paragraph>https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload</paragraph><paragraph>https://cwe.mitre.org/data/definitions/434.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":50,"title":"Command Injection","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>Injeção de comando é um ataque no qual o objetivo é a execução de comandos arbitrários no sistema operacional host por meio de uma aplicação vulnerável. </paragraph><paragraph></paragraph><paragraph>Os ataques de injeção de comando são possíveis quando um aplicativo passa dados inseguros fornecidos pelo usuário (formulários, cookies, cabeçalhos HTTP etc.) para um shell do sistema. Nesse ataque, os comandos do sistema operacional fornecidos pelo invasor geralmente são executados com os privilégios do aplicativo vulnerável.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A maneira mais eficaz de evitar vulnerabilidades de injeção de comando do sistema operacional é nunca chamar comandos do sistema operacional a partir do código da camada de aplicativo. Em praticamente todos os casos, existem maneiras alternativas de implementar a funcionalidade necessária usando APIs de plataforma mais seguras.</paragraph><paragraph></paragraph><paragraph>Se for considerado inevitável chamar os comandos do SO com entrada fornecida pelo usuário, uma forte validação de entrada deverá ser executada. Alguns exemplos de validação eficaz incluem:</paragraph><paragraph><bullet>Validando com uma lista de permissões de valores permitidos.</bullet></paragraph><paragraph><bullet> Validando que a entrada é um número. </bullet></paragraph><paragraph><bullet> Validando que a entrada contém apenas caracteres alfanuméricos, nenhuma outra sintaxe ou espaço em branco. </bullet></paragraph>","references":"<paragraph>https://owasp.org/www-community/attacks/Command_Injection</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":51,"title":"Insecure Deserialization","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Involved","type":"Web Application","overview":"<paragraph>A falha de desserialização insegura ocorre por meio da realização de serialização/desserialização de parâmetros GET e POST, ou cabeçalhos de requisições HTTP. Desta forma, ataques à parâmetros desserializáveis ocorrem geralmente pelos seguintes procedimentos:</paragraph><paragraph>Ataques à estruturas de dados e objetos os quais são passíveis de modificação pelo atacante a fim de alterar a lógica de aplicação e, concretizar a execução remota de código arbitrário, caso existam classes disponíveis na aplicação para modificação de comportamento previamente ou posteriormente a desserialização.</paragraph><paragraph>Ataques típicos de alteração de dados disponíveis em parâmetros HTTP (e.g. ataques relacionados à controles de acesso), os quais fazem uso de estruturas de dados já disponíveis, contudo, com seu conteúdo modificado.</paragraph><paragraph></paragraph><paragraph>A serialização de objetos é frequentemente utilizada em aplicações para efetivação das seguintes funções:</paragraph><paragraph></paragraph><paragraph><bullet>Comunicação remota ou inter-processo (RPC/IPC).</bullet></paragraph><paragraph><bullet>Protocolos de rede, serviços web e message brokers (conversor de mensagens de protocolo).</bullet></paragraph><paragraph><bullet>Caching/Persistência.</bullet></paragraph><paragraph><bullet>Databases, servidores de cache, sistemas de arquivos.</bullet></paragraph><paragraph><bullet>Cookies HTTP, parâmetros em formulários HTTP, tokens de autenticação em APIs.</bullet></paragraph><paragraph></paragraph><paragraph>A exploração de vulnerabilidades de desserialização envolve alta complexidade para concretização, visto que, a efetivação do ataque necessita frequentemente de modificação de procedimentos automatizados previamente divulgados e, o conhecimento prévio da linguagem de programação utilizada para processamento e execução da aplicação alvo, além das estruturas de dados – e a inicialização de seus objetos - relativas da linguagem utilizada.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A recomendação sugerida para mitigar possíveis explorações de conteúdos serializados/desserializáveis é a remoção de funções as quais realizam desserialização de quaisquer dados manipuláveis pelo cliente (e.g. cabeçalhos e parâmetros HTTP). </paragraph><paragraph></paragraph><paragraph>Contudo, caso a remoção dos métodos não seja possível, recomenda-se as seguintes medidas: </paragraph><paragraph><bullet>Implementação de verificações de integridade: mecanismos de assinatura digital em objetos serializados para prevenir a criação/inicialização de objetos não anteriormente previstos ou a adulteração de dados.</bullet></paragraph><paragraph><bullet>Implementação de objetos de forma restritiva a fim de verificar quaisquer tipos de inicialização de tipos não permitidos em objetos serializados. Contudo, há formas relatadas de evasão da técnica descrita, portanto, a implementação unicamente desta técnica não é recomendada.</bullet></paragraph><paragraph><bullet>Execução do contexto da aplicação por usuários de privilégio restrito. Criação de arquivos de log para exceções e falhas em procedimentos de desserialização (e.g. tipo do objeto inserido não é o tipo esperado pelo método/função da aplicação; exceptions).</bullet></paragraph><paragraph><bullet>Restringir e monitorar o tráfego em rede de servidores os quais realizam desserialização.</bullet></paragraph><paragraph><bullet>Monitorar desserializações (e.g. consecutivas desserializações por determinado usuário).</bullet></paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":52,"title":"Open Redirect","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>A vulnerabilidade de Open Redirect consiste na existência de um parâmetro na aplicação web responsável por renderizar conteúdo presente em outro “domínio” ou IP. Desta forma, um atacante pode fazer uso deste parâmetro e especificar um site que controla na própria URL do site autêntico. </paragraph><paragraph></paragraph><paragraph>Após enviar a URL com o parâmetro malicioso para a vítima, o navegador irá renderizar o conteúdo presente no site malicioso e a vítima passará a interagir com o site. </paragraph><paragraph></paragraph><paragraph>Torna-se possível a captura de credenciais/cookies por meio de códigos Javascript maliciosos ou a criação de um site semelhante a fins de captura de credenciais por meio de phishing.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A solução mais eficaz para eliminar as vulnerabilidades de Open Redirect é evitar a transmissão de entrada enviada pelo usuário para qualquer sistema de websites / API. </paragraph><paragraph></paragraph><paragraph>Se isso não for possível, a aplicação pode manter uma whitelist de websites, que pode ser incluída pela página, e usar um identificador (por exemplo, o número do índice) para acessar o website selecionado. </paragraph><paragraph></paragraph><paragraph>Qualquer solicitação contendo um identificador inválido deve ser rejeitada, desta forma, não há superfície de ataque para que usuários mal-intencionados manipulem o caminho.</paragraph>","references":"<paragraph>https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":53,"title":"LLMNR/NBT-NS Poisoning and SMB Relay ","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>Os protocolos LLMNR e NetBIOS são dois protocolos utilizados para a resolução de nomes em ambientes Windows, de forma a fornecer endereços IPs dos respectivos nomes de possíveis serviços na rede. </paragraph><paragraph>Contudo, endereços e provedores de endereço na rede não são verificados, visto que o sistema operacional Windows assume que as máquinas presentes na rede são confiáveis. </paragraph><paragraph>No momento em que a resolução de DNS falha, o Windows realiza o envio de mensagens broadcast para outros dispositivos na rede em busca da possível existência do hostname/nome na rede e, portanto, de seu endereço, por meio dos protocolos LLMNR e NBT-NS. </paragraph><paragraph>No caso de um serviço SMB, caso um dispositivo esteja configurado para autenticar automaticamente por SMB, um atacante é capaz de responder às tentativas de resoluções de nomes como portador efetivo destes nomes e, portanto, enviando seu endereço às vítimas. </paragraph><paragraph>Desta forma, as vítimas automaticamente realizam a tentativa de autenticação no servidor criado pelo atacante. Por fim, o atacante é capaz de realizar a captura da credencial de login da vítima e, da senha de rede criptografada (Hash Net-NTLM). Posteriormente, o atacante é capaz de realizar ataques à criptografia e, possivelmente obtenção da senha em texto plano.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A melhor prática para realizar a proteção de sistemas contra envenenamento de protocolos LLMNR/NBT-NS é a desativação destes protocolos. É necessário garantir que ambos os protocolos sejam desativados, visto que o Windows, em caso de falha de um dos protocolos, realiza a tentativa de resolução pelo outro.</paragraph><paragraph></paragraph><paragraph>1)\tDesativando LLMNR:</paragraph><paragraph>•\tAbra o Editor de Group Policy.</paragraph><paragraph>•\tNavegue até Local Computer Policy -&gt; Computer Configuration -&gt; Administrative Templates -&gt; Network -&gt; DNS Client.</paragraph><paragraph>•\tEm DNS Client, marque a opção “Turn Off Multicast Name Resolutation” como Enabled.</paragraph><paragraph>2)\tDesativando NBT-NS:</paragraph><paragraph>•\tAbra as Configurações de Rede e visualize as propriedades do adaptador de rede.</paragraph><paragraph>•\tSelecione Interne Protocol Version 4 (TCP/IPv4) e clique em Propriedades.</paragraph><paragraph>•\tNa aba Geral clique em Avançado e navegue para a aba WINS. Então, selecione “Disable NetBIOS over TCP/IP”.</paragraph>","references":"<paragraph>https://attack.mitre.org/techniques/T1171/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":54,"title":"LSA protection disabled","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>A autenticação LSA descreve partes do Local Security Authority (LSA), o qual é utilizada por aplicações para autenticar e logar usuários no sistema local. </paragraph><paragraph></paragraph><paragraph>A autenticação também descreve como criar e chamar pacotes de autenticação e de segurança. As funções de Autenticação LSA permitem a escrita de pacotes de autenticação. Durante a autenticação, algumas credenciais podem ser armazenadas em memória, acessíveis por processos como lsass.exe. </paragraph><paragraph></paragraph><paragraph>Por meio da extração da área de memória correspondente a esse processo é possível obter credenciais em texto puro ou hashes NTLM de usuários previamente autenticados.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>É recomendável que se ative a proteção de LSA, através dos passos abaixo. Procedimento sugerido:</paragraph><paragraph>1.\tAbra o Regedit do Windows como administrador;</paragraph><paragraph>2.\tExpanda o HKEY_LOCAL MACHINE &gt; SYSTEM &gt; CurrentControlSet &gt; Control &gt; Lsa;</paragraph><paragraph>3.\tNa pasta Lsa, crie um novo valor DWORD (32-bit), e o nomeie como “RunAsPPL”. </paragraph><paragraph>4.\tEdite o valor do registro para 1. </paragraph><paragraph>5.\tReinicie o servidor.</paragraph>","references":"<paragraph>https://docs.microsoft.com/en-us/sysinternals/downloads/procdump</paragraph><paragraph>https://docs.microsoft.com/pt-br/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":55,"title":"BlueKeep Vulnerability (CVE-2019-0708)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>No mês de maio de 2019 a Microsoft divulgou a descoberta de uma vulnerabilidade de alto risco (CVE-2019-0708, BlueKeep) no protocolo para utilização de sessões remotas interativas (Remote Desktop), impactando versões como Windows XP, Windows 8, Windows Server 2003, Windows Server 2008 e Windows Server 2008 R2. </paragraph><paragraph>Esta vulnerabilidade permite que um atacante não autenticado ou malware com procedimentos automatizados execute comandos de sistema operacional nas máquinas vulneráveis com privilégios de System.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A correção desta vulnerabilidade é realizada por meio do patch das versões vulneráveis do Windows. Atualmente a Microsoft já publicou patches de correção para as versões Windows 7, Server 2008 &amp; R2, Windows XP e Server 2003.</paragraph><paragraph>Também recomenda-se desabilitar o serviço de Remote Desktop das máquinas as quais não há a utilização deste serviço. </paragraph><paragraph></paragraph><paragraph>Por fim, também recomenda-se o requisito de Network Level Authentication (NLA) durante a autenticação RDP. O NLA é uma tecnologia que requer que usuários de domínio se autentiquem ao servidor antes que a sessão RDP seja inicializada. Inicialmente, caso um usuário tentasse autenticar-se via RDP, o servidor enviaria uma tela de login para que o usuário autenticasse. </paragraph><paragraph></paragraph><paragraph>Desta forma, um atacante seria capaz de utilizar recursos do servidor. Por meio do NLA, é delegado que um usuário preencha suas credenciais por meio do Security Support Provider antes que a conexão seja iniciada com o servidor.</paragraph>","references":"<paragraph>https://blog.qualys.com/laws-of-vulnerabilities/2019/05/15/windows-rdp-remote-code-execution-vulnerability-bluekeep-how-to-detect-and-patch •\thttps://github.com/Ekultek/BlueKeep</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":56,"title":"Insecure Direct Object References","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Planned","type":"Web Application","overview":"<paragraph>O ataque de Referência Insegura e Direta a Objetos (IDOR) ocorre quando a aplicação expõe por meio de parâmetros ou cabeçalhos HTTP referências internas à objetos carregados pela aplicação, podendo ser relacionados à informações de usuários: token, arquivos, JSON’s, etc. </paragraph><paragraph></paragraph><paragraph>Esta falha geralmente revela um padrão de referenciamento à objetos, geralmente relacionados à numerais ou caracteres iterativos/timestamp do momento de inclusão do objeto ao banco de dados. </paragraph><paragraph></paragraph><paragraph>Por meio do conhecimento do padrão de referenciamento, um atacante pode manipular o objeto referenciado de tal forma que pode acessar outros objetos existentes no banco de dados (e.g iterando determinado parâmetro GET id). </paragraph><paragraph></paragraph><paragraph>A inexistência de um procedimento de verificação de referenciamento inconsistente (usuário solicitando objeto não relacionado a si) permite que o usuário acesse informações de outros usuários (a depender do significado do objeto referenciado).</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A existência de um procedimento de referenciamento direto à objetos não consiste como uma falha, porém, o referenciamento de objetos de forma insegura caracteriza o procedimento como vulnerável. </paragraph><paragraph>Portanto, as recomendações referentes à falha referem-se justamente à técnicas de manipulação de objetos de forma segura:</paragraph><paragraph><bullet>Recomenda-se não permitir a manipulação de objetos do lado do cliente. A referência à objetos deve ser abstraído da visão do cliente final, de tal forma que ao acessar um objeto (arquivo, página, obtenção de JSON com configurações de conta, etc) o cliente não possua acesso ao parâmetro que referencia o objeto acessado.</bullet></paragraph><paragraph><bullet>Caso não seja possível retirar o referenciamento direto à objetos do lado do cliente, recomenda-se a utilização de procedimentos para diminuir a previsibilidade do parâmetro referenciado. Ao referenciar um objeto não deve ser utilizado um valor iterativo ou timestamp.</bullet></paragraph><paragraph>É válida a utilização de um valor em hash para acessar o objeto, de tal forma que o atacante não seja capaz de prever os outros valores em hash referenciados a objetos existentes no banco de dados. A implementação deste procedimento necessita a adição de uma coluna extra ao objeto referenciado na tabela existente no banco de dados. Exemplo: ao referenciar um arquivo, a aplicação deve buscar o arquivo utilizando um valor em hash, o qual é utilizado para obter a linha correta do objeto buscado e, portanto, o objeto de fato referenciado.</paragraph>","references":"<paragraph>https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Insecure_Direct_Object_Reference_Prevention_Cheat_Sheet.md</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":57,"title":"Database User with Administrator Privileges","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Database","overview":"<paragraph>O serviço de Gerenciador de Banco de Dados está sendo executado com usuários de privilégios de DBA (Administrador de Banco de Dados). A execução do serviço por meio de credenciais de administrador torna possível que queries restritas sejam utilizadas: habilitação de opções avançadas, criação, deleção, inserção e update de quaisquer tabelas disponíveis; leitura de arquivos de sistema operacional e cadastro em tabelas; criação de usuários com privilégios de administrador e, execução de comandos de sistema operacional.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se a criação de usuário menos privilegiado no Gerenciador de Banco de Dados contendo permissões restritas. O novo usuário não deverá ser usuário DBA e não deverá possuir acesso ao Information_Schema do Gerenciador, além de possuir permissões de SELECT restritas apenas aos bancos previstos de serem utilizados pela aplicação web conectada. </paragraph><paragraph>As credenciais de conexão ao banco de dados devem ser substituídas pelas novas credenciais na aplicação web que conecta-se ao banco de dados. Caso a criação de um novo usuário não seja possível, é recomendada a restrição das permissões do usuário utilizado.</paragraph>","references":"<paragraph>https://docs.microsoft.com/pt-br/sql/database-engine/configure-windows/configure-windows-service-accounts-and-permissions?view=sql-server-2017</paragraph><paragraph>https://docs.microsoft.com/pt-br/sql/database-engine/configure-windows/configure-file-system-permissions-for-database-engine-access?view=sql-server-2017</paragraph><paragraph>https://stackoverflow.com/questions/63749/what-user-account-would-you-recommend-running-the-sql-server-express-2008-servic</paragraph><paragraph>https://cwe.mitre.org/data/definitions/250.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":58,"title":"Execution with Unnecessary Privileges","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"System Security","overview":"<paragraph>A aplicação em execução está sendo executada por um usuário administrativo (System). Aplicações que apresentam interface de comandos de sistema operacional apresentam um sério risco para o negócio, visto que o atacante, por meio de credenciais obtidas pode interagir com a aplicação e operá-la com privilégios de usuário System (Usuário com privilégios de Administrador) e, consequentemente, executar comandos de sistema com a mesma prerrogativa.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se a criação de usuário menos privilegiado no servidor para executar a aplicação. A melhor prática de hardening para servidores sugere que o usuário que execute a aplicação deve ter os recursos essenciais para o mesmo. Caso a criação de um novo usuário não seja possível, é recomendada a restrição das permissões do usuário utilizado.</paragraph>","references":"<paragraph>https://cwe.mitre.org/data/definitions/250.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":59,"title":"Lack of Captcha Mechanisms","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Best Practice","overview":"<paragraph>A existência de mecanismos de CAPTCHA possui a função de identificar usuários legitimamente humanos. Portanto, a utilização deste mecanismo torna possível inviabilizar procedimentos que estejam sendo realizados por ferramentas automatizadas em determinados recursos da aplicação. Comumente utilizado em recursos de autenticação (Login, Criação de Contas, Redefinição de Senhas, etc), o CAPTCHA é um recurso capaz de inviabilizar ataques de força bruta e injeções de SQL, dificultando a atuação de um possível atacante para a aplicação com esse recurso habilitado. </paragraph><paragraph></paragraph><paragraph>A utilização desse mecanismo não necessariamente impossibilita a atuação de um atacante, porém, aumenta consideravelmente o tempo necessário para realizar a exploração de um ataque. </paragraph><paragraph></paragraph><paragraph>Exemplo: um parâmetro vulnerável à injeção de SQL ainda é passível de ser explorado manualmente sem a utilização de ferramentas automatizadas, porém a extração/edição/exclusão de informações torna-se muito mais difícil graças ao mecanismo de proteção e, portanto, a necessidade da realização do procedimento de forma manual.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se a implementação de soluções de CAPTCHA aos portais de autenticação mencionadas. </paragraph><paragraph></paragraph><paragraph>É necessário afirmar que a implementação da solução recomendada não mitiga o risco de exploração, porém a dificulta, visto que um atacante necessitaria executar as técnicas de ataque de força-bruta ou reaproveitamento de credenciais manualmente. </paragraph><paragraph></paragraph><paragraph>O fato de apenas 4 credenciais serem identificadas como reaproveitadas em um universo de mais de 8000 credenciais reforça a implementação do sistema de CAPTCHA.</paragraph><paragraph></paragraph><paragraph>Se considerarmos um tempo supostos de execução de cinco segundos para verificação manual de reaproveitamento de credenciais, seriam necessários 5s x 8000 usuários = 40.000 segundos para verificar manualmente todas as credenciais reaproveitadas, tempo correspondente a 11 horas, algo que, realizado de forma automatizada contabilizaria tempo de poucos minutos para execução completa.</paragraph><paragraph></paragraph><paragraph>Também recomenda-se a criação de uma política de senhas de alta complexidade e entropia, requisitando a criação de senhas com ao menos 8 caracteres, fazendo uso de caracteres alfanuméricos e especiais. </paragraph><paragraph></paragraph><paragraph>A criação de alta entropia é realizada por meio da implementação de blacklists na funcionalidade de definição de senhas de usuários, não permitindo a inclusão de certas sequências de caracteres durante a criação (exemplo: 123, qwe, senha, password, teste, admin, 456, 123456, etc). </paragraph><paragraph></paragraph><paragraph>Esta implementação dificulta para um atacante a criação de listas com senhas frequentemente utilizadas, além de contribuir para a criação final de Hash’s de senha com valores finais de difícil previsibilidade, fazendo com que a duração de ataques para obtenção de senhas a partir de Hash’s armazenados nos bancos de dados seja inviável.</paragraph>","references":"<paragraph>https://webdesign.tutsplus.com/pt/tutorials/how-to-integrate-no-captcha-recaptcha-in-your-website--cms-23024</paragraph><paragraph>https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/03-Testing_for_Weak_Lock_Out_Mechanism</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":60,"title":"Secondary Logon Handle Vulnerability (CVE 2016-0099)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>A vulnerabilidade MS16-032 descoberta no ano de 2016 originalmente por James Forshaw explora a função de Logon Secundário existente nas versões de Windows. </paragraph><paragraph>A função de Logon Secundário permite que usuários administradores autentiquem-se e realizem ações de alto privilégio por meio de uma conta não administrativa. A vulnerabilidade vale-se da forma como o serviço sanitiza a criação de novos processos por meio de handles (estruturas de programação abstratas responsáveis por ocultar a região de memória real de um usuário da API de sistema, permitindo que o sistema reorganize a memória física transparentemente ao programa que realiza acesso). </paragraph><paragraph>A vulnerabilidade, caso explorada com sucesso, permite que usuários elevem seus privilégios à usuários de sistema (SYSTEM), garantindo permissões administrativas na máquina alvo, sendo apenas restrito a políticas de domínio (GPOs) vigentes.</paragraph><paragraph>A vulnerabilidade afeta os seguintes sistemas:</paragraph><paragraph>•\tWindows Vista</paragraph><paragraph>•\tWindows 7</paragraph><paragraph>•\tWindows 8.1</paragraph><paragraph>•\tWindows 10</paragraph><paragraph>•\tWindows 2008 Server</paragraph><paragraph>•\tWindows 2012 Server</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A recomendação vigente para a vulnerabilidade citada é a atualização do sistema operacional por meio da aplicação Windows Update. A atualização de segurança já está disponível para todos os sistemas operacionais afetados por meio dos updates disponíveis pela aplicação padrão da Microsoft.</paragraph>","references":"<paragraph>https://www.rapid7.com/db/modules/exploit/windows/local/ms16_032_secondary_logon_handle_privesc </paragraph><paragraph>https://pentestlab.blog/tag/ms16-032/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":61,"title":"EternalBlue Vulnerability (CVE-2017-0144)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>A vulnerabilidade EternalBlue foi uma falha amplamente divulgada no período de Maio de 2017, visto que foi uma das falhas utilizadas durante a cadeia de ataque do malware WannaCry, o qual espalhou-se rapidamente, infectando mais de 200 mil sistemas em 150 países e gerando danos de bilhões de dólares. Este episódio foi caracterizado como a maior infecção de ransomware da história.</paragraph><paragraph>Esta falha está relacionada ao protocolo Windows SMB 1.0 (SMBv1) e a forma como o servidor realiza o tratamento de algumas requisições enviadas por clientes. Em caso de exploração bem-sucedida, um atacante é capaz de realizar a execução de comandos de sistema operacional com alto nível de privilégio na máquina alvo.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A recomendação para corrigir a falha citada segue-se com o update das versões de sistemas operacionais Windows.</paragraph>","references":"<paragraph>https://support.microsoft.com/en-gb/help/4023262/how-to-verify-that-ms17-010-is-installed</paragraph><paragraph>https://blog.trendmicro.com/trendlabs-security-intelligence/ms17-010-eternalblue/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":62,"title":"Unsecured Credentials: Credentials In Files ","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>O depósito de credenciais em arquivos em servidores ou workstations apresenta um grande risco para o negócio a partir do momento em que estas credenciais tornam-se visíveis para outros usuários os quais compartilham recursos da máquina a qual possui a vulnerabilidade. </paragraph><paragraph>A busca de credenciais armazenadas localmente é um dos procedimentos frequentemente utilizados por atacantes a fim de aumentar a superfície de ataque, possibilitando o comprometimento de aplicações (Serviços HTTP, Email, FTP, SSH) ou recursos em rede (servidores/workstations). </paragraph><paragraph>Usuários maliciosos podem realizar a busca de credenciais em arquivos em FileServers, diretórios compartilhados em rede ou recursos em rede passíveis de acesso com os privilégios já obtidos. Realiza-se a busca de credenciais em códigos-fonte, arquivos binários, arquivos de configuração de aplicações, arquivos de rotinas de execução de código e, arquivos de texto. </paragraph><paragraph>As decorrências da exploração da vulnerabilidade estão diretamente relacionadas ao recurso ao qual as credenciais fazem referência. Contudo, ainda que as credenciais não sejam válidas, estas revelam informações sobre padrões de valores de usuários e políticas de senha vigentes, possibilitando a elaboração de técnicas mais complexas de ataque.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A recomendação para a vulnerabilidade citada baseia-se integralmente em deletar os arquivos os quais contém credenciais armazenadas de usuário, caso estes sejam referentes à arquivos de texto. </paragraph><paragraph>Caso as credenciais armazenadas estejam depositadas em Preferências de Políticas de Grupo (Group Policy Preferences – GPP), recomenda-se deletar estas políticas e, a readequação das mesmas a fim de não prover credenciais.</paragraph><paragraph>Também recomenda-se a restrição de arquivos e diretórios de acesso apenas aos usuários aos quais o acesso é realmente necessário. </paragraph><paragraph>Em caso de aplicações as quais realizam o arquivamento de credenciais em seus arquivos de configuração, caso estas aplicações sejam compartilhadas para dois ou mais usuários (e.g. Servidores de VPN), recomenda-se a criação de um ambiente separado para cada usuário ao qual realiza acesso à aplicação, de tal forma que sejam criados diretórios separados no servidor para os usuários aos quais realizam acesso. </paragraph><paragraph>Então, devem ser criados arquivos separados de configuração depositados nas pastas padrões de acesso destes usuário, de forma que cada usuário apresenta uma configuração específica de acesso à aplicação e, não seja permitido a visualização do conteúdo das pastas de outros usuários, não permitindo então a visualização de credenciais de conhecimento de outros usuários depositadas em seus arquivos de configuração/sessão de aplicação.</paragraph>","references":"<paragraph>https://attack.mitre.org/techniques/T1081/</paragraph><paragraph>https://owasp.org/www-project-mobile-top-10/2014-risks/m2-insecure-data-storage</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":63,"title":"Lack of Network Access Control","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>A existência de um controle de acesso à rede, conhecido como NAC, restringe o escopo de equipamentos permitidos a conectar na rede corporativa da Organização, protegendo contra acessos não autorizados. </paragraph><paragraph>A restrição deve ser realizada com base da autenticação, preferencialmente realizada via certificado de máquina, podendo ser expandida para controlar conexões que estejam dentro dos requisitos mínimos ou padrão previsto na Política da Organização.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se que a empresa avalie a possibilidade e implementação de uma solução NAC, para impedir que dispositivos não autorizados tenham comunicação com outros equipamentos de rede pertencentes à empresa.</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/Test_Network/Infrastructure_Configuration_(OTG-CONFIG-001)</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":64,"title":"Insufficient Network Segmentation ","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Internal","overview":"<paragraph>A rede da companhia não conta com segregação de rede eficiente, ou seja, ao obter acesso aos servidores expostos foi possível obter acesso a rede da companhia, sendo assim possível alcançar a rede de usuários e servidores. Com isso, é possível realizar o acesso a portas administrativas, tais como RDP (Remote Desktop Protocol), SSH (Secure Shell), e conectar em qualquer dispositivo da rede.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Implementar controles referentes à segregação entre redes por interesse de tráfego, isolando segmentos mais críticos da organização, e controlando os tipos de protocolo que são utilizados nas extremidades da rede. De forma geral, servidores e dispositivos críticos devem ser acessados somente por pessoas autorizadas, portanto é imperativo que a camada de conexão reflita o controle.</paragraph><paragraph>Outros benefícios de segregar a rede são:</paragraph><paragraph><bullet>Segurança aprimorada. O tráfego de rede pode ser isolado e / ou filtrado para limitar e / ou impedir o acesso entre os segmentos de rede.</bullet></paragraph><paragraph><bullet>Melhor controle de acesso. Permite que os usuários acessem apenas recursos de rede específicos.</bullet></paragraph><paragraph><bullet>Monitoramento aprimorado. Oferece uma oportunidade para registrar eventos, monitorar conexões internas permitidas e negadas e detectar comportamentos suspeitos.</bullet></paragraph><paragraph><bullet>Performance melhorada. Com menos hosts por sub-rede, o tráfego local é minimizado. O tráfego de transmissão pode ser isolado para a sub-rede local.</bullet></paragraph><paragraph><bullet>Melhor contenção. Quando ocorre um problema de rede, seu efeito é limitado à sub-rede local.</bullet></paragraph>","references":"<paragraph>http://www.sans.org/reading-room/whitepapers/bestprac/infrastructure-security-architecture-effective-security-monitoring-36512</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":65,"title":"Using Components with Known Vulnerabilities","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>Vulnerabilidades em bibliotecas e software de terceiros são extremamente comuns e podem ser usadas para comprometer a segurança dos sistemas que usam o software. Nos últimos anos, foram publicados aproximadamente 4500 CVEs (Common Vulnerabilities and Exposures) por ano.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Algumas recomendações para essa vulnerabilidade são:</paragraph><paragraph><bullet>Remova dependências não utilizadas, recursos, componentes, arquivos e documentação desnecessários.</bullet></paragraph><paragraph><bullet>Faça um inventário contínuo das versões dos componentes do lado do cliente e do servidor (por exemplo, estruturas, bibliotecas) e suas dependências usando ferramentas como versões, DependencyCheck, retire.js, etc.</bullet></paragraph><paragraph><bullet>Monitore continuamente fontes como CVE e NVD quanto a vulnerabilidades nos componentes. Use ferramentas de análise SCA (Software Composition Analysis) para automatizar o processo.</bullet></paragraph><paragraph><bullet>Assine alertas por email sobre vulnerabilidades de segurança relacionadas aos componentes que você usa.</bullet></paragraph><paragraph><bullet>Obtenha componentes apenas de fontes oficiais através de links seguros.</bullet></paragraph><paragraph><bullet>Prefira pacotes assinados para reduzir a chance de incluir um componente malicioso modificado.</bullet></paragraph><paragraph><bullet>Monitore bibliotecas e componentes que não são mantidos ou não criam patches de segurança para versões mais antigas. Se a correção não for possível, considere implantar uma correção virtual para monitorar, detectar ou proteger contra o problema descoberto.</bullet></paragraph><paragraph>Toda organização deve garantir que exista um plano contínuo de monitoramento, triagem e aplicação de atualizações ou alterações de configuração durante a vida útil da aplicação.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":66,"title":"Insufficient Emulated Device Detection or Root Detection ","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Imported","overview":"<paragraph>O aplicativo não está usando nenhum mecanismo ou está utilizando um mecanismo ineficaz para verificar se está sendo executado em um dispositivo real ou emulado, embora isso não apresente nenhum risco direto, é um forte indicador. Permitir a execução em dispositivos emulados pode facilitar para os invasores procurarem vulnerabilidades no aplicativo.</paragraph><paragraph></paragraph><paragraph>Também não foi identificada nenhuma verificação de que o aplicativo esteja sendo executado em um dispositivo com privilégios de root. Isso permite que um invasor modifique o aplicativo e tenha acesso completo a ele, o que significa que um invasor pode potencialmente induzir um comportamento que não ocorreria de outra forma, obtendo uma superfície de ataque maior.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomendamos que exista pelo menos uma função que proíba o uso do aplicativo em um Android emulado.</paragraph><paragraph></paragraph><paragraph>Uma função de detecção de root também deve ser implementada antes de iniciar a execução do aplicativo. Existem várias maneiras de detectar um dispositivo Android com privilégios de root, sendo a idéia principal tentar executar uma ação que só seria permitida em um dispositivo com tal permissão. </paragraph><paragraph></paragraph><paragraph>Se a ação for bem-sucedida, o aplicativo saberá que está sendo executado com permissões de root. Recomendamos implementar o máximo de verificações possíveis para aumentar a segurança contra esta característica.</paragraph>","references":"<paragraph>•https://github.com/OWASP/owasp-mstg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md</paragraph><paragraph>•https://developers.google.com/android/reference/com/google/android/gms/safetynet/SafetyNet</paragraph><paragraph>•https://developer.android.com/training/safetynet/attestation.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":68,"title":"App without Certificate Pinning","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Imported","overview":"<paragraph>A fixação de certificado é o processo de associar um servidor backend a um certificado x509 ou uma chave pública específica, em vez de aceitar qualquer certificado assinado por uma autoridade de certificação confiável. </paragraph><paragraph>Depois de “fixar” o certificado ou a chave pública do servidor, o aplicativo móvel subsequentemente se conectará apenas ao servidor conhecido. Retirar a confiança de autoridades de certificação externas reduz a superfície de ataque do aplicativo. </paragraph><paragraph>A fixação de certificado é usada para verificar se as comunicações do cliente estão sendo enviadas para o servidor remoto pretendido, portanto, se o servidor apresentar um certificado desconhecido, o aplicativo não transmitirá os dados.</paragraph><paragraph>Sem tal fixação, um invasor pode implementar seu próprio proxy interceptador com um certificado arbitrário para exibir solicitações de e para o dispositivo cliente em texto não criptografado.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>É necessário realizar a pinagem de um certificado único para mitigar esta vulnerabilidade.</paragraph>","references":"<paragraph>https://cheatsheetseries.owasp.org/cheatsheets/Pinning_Cheat_Sheet.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":69,"title":"Source Code Without Obfuscation","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Best Practice","overview":"<paragraph>Ocultação é o processo de conversão de código e dados para dificultar a compreensão do mesmo. É parte integrante de todo esquema de proteção de software. O importante é entender que a ofuscação não é algo que pode ser simplesmente ligado ou desligado. Os programas podem se tornar incompreensíveis, no todo ou em parte, de várias maneiras e em diferentes graus.</paragraph><paragraph>Neste caso de teste, descrevemos algumas técnicas básicas de ofuscação que são comumente usadas no Android.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Como prática recomendada, implemente um algoritmo de ofuscação de código.</paragraph>","references":"<paragraph>•https://www.owasp.org/index.php/Bytecode_obfuscation</paragraph><paragraph>•https://github.com/OWASP/owasp-mstg/blob/1.1.3/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md#testing-obfuscation-mstg-resilience-9</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":71,"title":"Information Disclosure through Logs","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Imported","overview":"<paragraph>Existem muitos motivos legítimos para criar arquivos de log em um dispositivo móvel, como controlar falhas, erros e estatísticas de uso. Os arquivos de log podem ser armazenados localmente quando o aplicativo está offline e enviados para servidores assim que o aplicativo estiver online. O sistema android também pode ser utilizado para gerar logs das aplicações. </paragraph><paragraph>O registro de dados confidenciais pode expô-los a invasores ou aplicativos mal-intencionados e viola a confidencialidade do usuário.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Será necessário ofuscar as informações que estão sendo incluidas nos logs de sistema ou desabilitar tal função.</paragraph><paragraph>Possivelmente, os logs estão sendo gerados pelas classes System.out.println ou printStackTrace.</paragraph><paragraph>Caso seja de fato necessário gerar logs detalhados da aplicação, deverão ser gerados e/ou armazenados de forma criptografada.</paragraph>","references":"<paragraph>•https://github.com/OWASP/owasp-mstg/blob/1.1.3/Document/0x05d-Testing-Data-Storage.md#testing-logs-for-sensitive-data-mstg-storage-3</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":72,"title":"Lack of Jailbreak Detection ","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Imported","overview":"<paragraph>Não é verificado se o dispositivo está sendo utilizado em um aparelho com Jailbreak (“processo que permite aparelhos com o sistema iOS execute aplicativos não-autorizados pela fabricante Apple”). </paragraph><paragraph>Isso permite que um invasor modifique o aplicativo em um dispositivo iOS, o que significa que um invasor pode potencialmente induzir comportamentos que de outra forma não ocorreriam.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph></paragraph>","references":"<paragraph></paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":73,"title":"Improper Error Handling","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Web Application","overview":"<paragraph>O tratamento inadequado de erros pode introduzir uma variedade de problemas de segurança em um site. O problema mais comum é quando mensagens de erro internas detalhadas, como códigos de erro são exibidas para o usuário. Essas mensagens revelam detalhes de implementação que não devem ser revelados. Esses detalhes podem fornecer aos atacantes pistas importantes sobre possíveis falhas no site.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Uma política específica de como lidar com erros deve ser documentada, incluindo os tipos de erros a serem tratados e para cada um, quais informações serão relatadas ao usuário e quais serão registradas. Todos os desenvolvedores precisam entender a política e garantir que seu código a siga.</paragraph><paragraph>Na implementação, verifique se o site foi criado para lidar com todos os erros possíveis. Quando ocorrerem erros, o site deverá responder com um resultado projetado especificamente que seja útil ao usuário sem revelar detalhes internos desnecessários.</paragraph>","references":"<paragraph>https://owasp.org/www-community/Improper_Error_Handling</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":74,"title":"User with Code Execution Permission","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":0,"effort":"Quick","type":"Database","overview":"<paragraph>O xp_cmdshell é uma procedure utilizada para executar comandos dos Windows (cmd). Isso é muito útil para executar tarefas no sistema operacional, como copiar arquivos, criar pastas, compartilhar pastas etc. usando o T-SQL. </paragraph><paragraph></paragraph><paragraph>Essa procedure habilitada em sistemas de produção pode ser perigosa, pois um atacante com credenciais do banco de dados, ou uma aplicação web vulnerável a SQL Injection - pode vir a executar comandos no sistema e continuar a conduzir ataques ao sistema.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se desabilitar a procedure para evitar o acesso ao sistema pelo uso do Banco de Dados. Para desabilitar a procedure, utilize o comando abaixo (preferencialmente como usuário sa):</paragraph><paragraph>[[EXEC sp_configure &#39;xp_cmdshell&#39;, 0;  </paragraph><paragraph>GO  </paragraph><paragraph>RECONFIGURE;]] </paragraph><paragraph>Também pode-se criar um usuário menos privilegiado no Gerenciador de Banco de Dados contendo permissões restritas. O novo usuário deverá possuir permissões de SELECT restritas apenas aos bancos previstos de serem utilizados. Para um nível extra de segurança, também recomenda-se implementar sistemas de detecção de intrusão de rede para monitorar o tráfego de rede em busca de atividades maliciosas.</paragraph>","references":"<paragraph>https://docs.microsoft.com/pt-br/sql/database-engine/configure-windows/configure-windows-service-accounts-and-permissions?view=sql-server-2017</paragraph><paragraph>https://www.sqlshack.com/use-xp-cmdshell-extended-procedure/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":0.0,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":0.0,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":75,"title":"App allow Backup","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":0,"effort":"Quick","type":"Imported","overview":"<paragraph>Essa flag permite que qualquer pessoa faça backup dos dados do seu aplicativo via adb. Ele permite que os usuários que ativaram a depuração USB copiem os dados do aplicativo do dispositivo. &quot;[android:allowBackup=true]&quot;</paragraph>","poc":"<paragraph>Recomenda-se desabilitar a flag application android:allowBackup=&quot;true&quot; para application android:allowBackup=&quot;false&quot; no arquivo manifest.xml, mudando o parâmetro para false.</paragraph>","remediation":"<paragraph></paragraph>","references":"<paragraph>https://owasp.org/www-pdf-archive/GiuseppePorcu-OWASPItalyDay19-10-2018.pdf</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":0.0,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":0.0,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":76,"title":"Brute Force Attack","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Best Practice","overview":"<paragraph>Um ataque de força bruta consiste em um atacante configurando valores (usuário e/ou senhas) predeterminadas e fazendo inúmeras requisições a um servidor usando esses valores e em seguida, analisando a resposta. </paragraph><paragraph>Existem alguns tipos de ataque, como o &quot;Dictionary attack&quot; onde com o objetivo de descobrir uma senha tenta-se centenas ou, algumas vezes, milhões de possibilidades, como por exemplo, palavras de um dicionário. </paragraph><paragraph>No ataque de força bruta tradicional geralmente é utilizado determinadas classes de caracteres, por exemplo: alfanumérico, especial, letras maiúsculas e minúsculas. Considerando um determinado método, número de tentativas, eficiência do sistema que conduz o ataque e eficiência estimada do sistema que é atacado, o atacante é capaz de calcular aproximadamente quanto tempo levará para submeter todos os valores predeterminados escolhidos.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomendamos implementar alguma proteção para ataques de força bruta, como por exemplo:</paragraph><paragraph>•Efetuar bloqueios temporários de contas após algumas tentativas falhas de login;</paragraph><paragraph>•Solicitar o resolvimento de um captcha para evitar ataques automatizados;</paragraph><paragraph>•Implementar mecanismo de duplo fator de autenticação.</paragraph><paragraph></paragraph><paragraph>O mecanismo de CAPTCHAs pode reduzir a probabilidade de sucesso desse ataque de, que são particularmente eficazes para impedir qualquer tipo de ataque de força bruta.</paragraph>","references":"<paragraph>https://owasp.org/www-community/attacks/Brute_force_attack</paragraph><paragraph>https://owasp.org/www-community/controls/Blocking_Brute_Force_Attacks</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":77,"title":"No Session Timeout","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":0,"effort":"Quick","type":"Best Practice","overview":"<paragraph>A aplicação apresenta comportamento falho ou inexistente de invalidação do token após longos períodos de inutilização das funções da aplicação - de forma a não indisponibilizar o uso do valor de token de usuário inserido nos cabeçalhos de sessão caso não seja realizada utilização da aplicação por longos intervalos de tempo – dias, meses consecutivos. </paragraph><paragraph></paragraph><paragraph>Desta forma é possível a utilização de token’s anteriormente gerados ainda após alterações de configuração de conta (e.g. alteração de senha), garantindo acesso irrestrito às funções da aplicação após uma autenticação válida.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A recomendação para a correção da vulnerabilidade baseia-se na criação de valores de timeouts para os tokens de sessão emitidos para a aplicação, gerando a invalidação destes após períodos de inutilização.</paragraph><paragraph></paragraph><paragraph>É necessário a criação de um campo referente à máxima data de uso deste token e, a cada tentativa de utilização deve-se realizar a verificação da possibilidade de uso, ou seja, data máxima de utilização não atingida.</paragraph><paragraph></paragraph><paragraph>Deve-se mencionar que as datas de invalidação de tokens devem ser válidas (e.g. posteriores a data de emissão), garantindo o funcionamento correto da aplicação, de forma a garantir que a condição de anulação do token seja passível de ser atingida ao especificar uma data posterior à sua data de geração.</paragraph><paragraph>Sugere-se a implementação dos seguintes mecanismos de proteção referentes à valores de sessão de usuários.</paragraph><paragraph></paragraph><paragraph>Expiração Manual de Sessão: A aplicação deve prover um botão de fácil acesso para realização de logout, possibilitando ao usuário a decisão de terminação de sessão e, consequentemente anulação de seu token de sessão por parte do servidor ao qual está armazenado.</paragraph><paragraph></paragraph><paragraph>Timeout por Ociosidade: Esta função anula o valor de sessão de usuário após períodos de ociosidade. De acordo com o framework OWASP para recomendações e testes de segurança de informação sugere-se valores de timeout de 2-5 minutos para aplicações de alta criticidade, 15-30 minutos para aplicações de média criticidade e, 3 horas para aplicações de baixa criticidade.</paragraph><paragraph></paragraph><paragraph>Timeout Absoluto: Esta função anula o valor de sessão de usuário independentemente de qualquer interação ou ausência desta para com a aplicação. Aplicações bancários e de serviços de compras devem implementar timeouts absolutos entre valores de 30 – 60 minutos. Contudo, para aplicações não relacionadas a estas categorias, o intervalo de timeout absoluto é variável.</paragraph><paragraph></paragraph><paragraph>Timeout para Renovação: Após períodos específicos de tempo, a aplicação deve não apenas anular o token emitido, porém, realizar também a emissão de um novo token de sessão.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication.html</paragraph><paragraph>https://owasp.org/www-community/Session_Timeout</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":0.0,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":0.0,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":78,"title":"A1 2017 - Injection","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>As falhas de injection são falhas de processamento de input de dados, comumente encontradas em queries SQL, LDAP, XPath ou NoSQL, comandos do sistema operacional, XML parsers, cabeçalhos SMTP, linguagens de expressão, entre outros.</paragraph><paragraph>As falhas de injeção são fáceis de descobrir ao examinar o código. Scanners e fuzzers podem ajudar os invasores a encontrar falhas de injection. </paragraph><paragraph>Quase qualquer fonte de dados pode ser um vetor de injection, variáveis de ambiente, parâmetros, serviços da Web externos e internos e todos os tipos de usuários. </paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Prevenir falhas de injection requer manter os dados separados dos comandos e consultas, o que pode ser alcançado através de técnicas de sanitização do input, para tentar garantir que o tipo de dado a ser processado corresponde com aquele no qual a aplicação foi originalmente projetada. Uma das formas é usar a validação de input “whitelist”, que é uma lista de caracteres permitidos em determinado campo. Isso invalida a tentativa de um atacante utilizar caracteres proibidos para alcançar êxito em um ataque. Alguns frameworks e bibliotecas de software possuem recursos nativos de sanitização, que podem ajudar a processar inputs de usuário na aplicação.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A1_2017-Injection</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":79,"title":"A2 2017 - Broken Authentication","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>A falha de Broken Authentication é uma falha no design e implementação dos controles de identidade e gerenciamento de sessão em uma aplicação. Atacantes podem detectar falhas de Broken Authentication usando meios manuais e explorá-los usando ferramentas automatizadas, como por exemplo o uso de ataques de dicionário para comprometer o acesso de um usuário.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>* Sempre que possível, implemente a autenticação multifator (2FA) para evitar ataques automatizados (como os de força bruta) e de reutilização de credenciais roubadas.</paragraph><paragraph>* Não envie ou implante com nenhuma credencial padrão, especialmente para usuários administradores.</paragraph><paragraph>* Implementar verificações de senha fraca, como testar senhas novas ou alteradas em uma lista das 10.000 piores senhas.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":81,"title":"A3 2017 - Sensitive Data Exposure","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>É uma vulnerabilidade que acontece quando recursos como aplicações web são configurados incorretamente para o propósito da aplicação. Alguns exemplos são quando existem dados desprotegidos, páginas que não são utilizadas ou recursos que vem por padrão com usuário e senha padrão do fabricante. </paragraph><paragraph></paragraph><paragraph>Muitas vezes essas informações são úteis para os atacantes, visto que elas revelam detalhes de implementações ou informações úteis para explorar uma outra vulnerabilidade.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Classifique os dados processados, armazenados ou transmitidos por uma aplicação e depois identifique quais dados são sensíveis de acordo com as leis de privacidade, requisitos regulatórios ou necessidades de negócios e de acordo com a situação, restrinja o acesso desses dados.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":83,"title":"A4 2017 - XML External Entities (XXE)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>A vulnerabilidade de XML External Entities (XXE) é um ataque característico de aplicações que realizam o tratamento de inputs XML. O ataque ocorre quando é realizada a inserção de uma entidade externa em um formulário contendo estruturas XML, de forma que esta entidade seja processada pela aplicação. </paragraph><paragraph></paragraph><paragraph>Este ataque pode levar à exposição de informações sensíveis graças ao processamento de external entities XML contendo referências à arquivos internos do servidor ou de compartilhamentos SMB. </paragraph><paragraph></paragraph><paragraph>Também possibilita a realização de requisições HTTP à servidores internos, devido à inserção de external entities fazendo referência a servidores internos.</paragraph><paragraph></paragraph><paragraph>Em aplicações PHP, a vulnerabilidade também possibilita a execução de comandos remotos no servidor vulnerável, utilizando a função nativa &quot;expect&quot;, a qual possibilita a execução de comandos de sistema operacional.</paragraph><paragraph></paragraph><paragraph>A exploração desse tipo de vulnerabilidade não é restrita à exploração de protocolos SMB ou HTTP, mas também possibilita a exploração de protocolos SSH, FTP, LDAP, SMTP, a depender da implementação destes protocolos no framework explorado.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A vulnerabilidade de XML External Entities ocorre frequentemente em aplicações Java, visto que grande parte das bibliotecas que realizam o processamento de formulários XML possuem a opção de processamento de External Entities habilitadas por padrão. </paragraph><paragraph></paragraph><paragraph>Portanto, a solução para a vulnerabilidade reside na declaração da instância responsável pelo processamento da estrutura XML com opção para processamento de External Entities declarada como false. </paragraph><paragraph></paragraph><paragraph>A maneira mais segura de impedir XXE é sempre desativar completamente as DTDs (entidades externas). Dependendo do parser, o método deve ser semelhante ao seguinte:</paragraph><paragraph>[[[ factory.setFeature(&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;, true); ]]]</paragraph>","references":"<paragraph>https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing</paragraph><paragraph>https://cheatsheetseries.owasp.org/cheatsheet /XML_External_Entity_Prevention_Cheat_Sheet.html</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":85,"title":"A5 2017 - Broken Access Control","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>A vulnerabilidade de Broken Access Control é uma categoria de falha na camada de controle de acesso da aplicação. Isso inclui ataques relacionados ao acesso, como por exemplo, ao modificar a URL de uma página pode-se acessar conteúdo administrativo da mesma de forma anônima, o que permite a visualização ou edição da conta de outra pessoa. Outro exemplo é a manipulação de metadados, como reproduzir ou adulterar um token de controle de acesso JSON Web Token (JWT) ou um cookie ou campo oculto manipulado para elevar privilégios dentro da aplicação.</paragraph><paragraph></paragraph><paragraph>O impacto técnico pode variar, mas em resumo presume que os atacantes possam agir como usuários ou administradores, ou usuários usando funções privilegiadas, criando, acessando, atualizando ou excluindo registros protegidos.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>O controle de acesso só é eficaz se aplicado server-side, onde o atacante não pode modificar a verificação de controle de acesso ou metadados. Algumas dicas para mitigar essa vulnerabilidade são os seguintes:</paragraph><paragraph></paragraph><paragraph>* Negar por padrão todos os conteúdos que não forem públicos.</paragraph><paragraph>* Implementar mecanismos de controle de acesso uma vez e reutilizá-los em toda a aplicação, incluindo a minimização do uso de CORS.</paragraph><paragraph>* Os controles de acesso ao modelo devem impor a propriedade do registro, em vez de aceitar que o usuário possa criar, ler, atualizar ou excluir qualquer registro.</paragraph><paragraph>* Desativar a lista de diretórios do servidor da web e certificar-se de que os metadados do arquivo (por exemplo, .git) e os arquivos de backup não estejam acessíveis em buscadores como o Google.</paragraph><paragraph>* Registrar falhas de controle de acesso, alertar os administradores quando apropriado (por exemplo, falhas repetidas).</paragraph><paragraph>* Os tokens JWT devem ser invalidados no servidor após o logout.</paragraph><paragraph>Os desenvolvedores e a equipe de QA devem incluir uma unidade de controle de acesso funcional e testes de integração. </paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":88,"title":"A6 2017 - Security Misconfiguration","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>Atacantes frequentemente tentarão explorar falhas não-corrigidas, acessar contas padrão, páginas não utilizadas ou antigas, arquivos e diretórios desprotegidos, etc. para obter acesso não autorizado ou conhecimento do sistema. Essas falhas podem dar aos atacantes acesso não autorizado a alguns dados ou funcionalidades do sistema. Ocasionalmente, essas falhas resultam em um comprometimento completo da aplicação.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Deve ser priorizado somente os recursos essenciais para o uso da aplicação, excluindo componentes, documentação e conteúdo desnecessário. Remova ou não instale recursos não utilizados.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":90,"title":"A7 2017 - Cross-Site Scripting (XSS)","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>O Cross-Site Scripting (XSS) é um dos ataques mais comumente executados contra uma ampla gama de aplicações web. O conceito de XSS é manipular uma aplicação web por meio de scripts no lado cliente (client-side), a fim de forçar a aplicação atacada a executar determinadas ações em outros clientes que se conectam a ela, conforme instruído pelo atacante. </paragraph><paragraph></paragraph><paragraph>Um exemplo clássico de XSS ocorre quando um atacante pode, por exemplo, injetar um script mal-intencionado em um comentário de um blog. Assim, quando um usuário legítimo acessa a página que contém o script com código malicioso, o navegador do usuário interpretará esse script e executará as operações definidas nele. </paragraph><paragraph></paragraph><paragraph>Entre as operações que podem ser executadas por meio de um script malicioso, se incluem a captura de cookies de sessão (ou tokens de sessão) de usuários legítimos, para conduzir ataques de sequestro de sessão.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Recomenda-se a sanitização dos parâmetros utilizados na página em evidência. Essa ação terá como objetivo filtrar o dado recebido e prevenir a exploração da vulnerabilidade presente. </paragraph><paragraph></paragraph><paragraph>Adicionalmente, é indicado validar todos os dados de entrada fornecidos pelos usuários nos campos de entrada de parâmetros e filtrar os dados que podem ser exibidos novamente na tela, evitando que ações, como códigos Java Script e tags HTML sejam injetados e executados pelos navegadores do usuário final. </paragraph><paragraph></paragraph><paragraph>Também se acredita que seja aplicável considerar utilizar um WAF (Web Application Firewall) para auxiliar na proteção contra essa vulnerabilidade.</paragraph>","references":"<paragraph>https://owasp.org/www-community/attacks/xss/</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":91,"title":"A8 2017 - Insecure Deserialization","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>A falha de desserialização insegura ocorre por meio da realização de serialização/desserialização de parâmetros GET e POST, ou cabeçalhos de requisições HTTP. Desta forma, ataques à parâmetros desserializáveis ocorrem geralmente pelos seguintes procedimentos:</paragraph><paragraph></paragraph><paragraph>Ataques à estruturas de dados e objetos os quais são passíveis de modificação pelo atacante a fim de alterar a lógica de aplicação e, concretizar a execução remota de código arbitrário, caso existam classes disponíveis na aplicação para modificação de comportamento previamente ou posteriormente a desserialização.</paragraph><paragraph></paragraph><paragraph>Ataques típicos de alteração de dados disponíveis em parâmetros HTTP (e.g. ataques relacionados à controles de acesso), os quais fazem uso de estruturas de dados já disponíveis, contudo, com seu conteúdo modificado.</paragraph><paragraph></paragraph><paragraph>A serialização de objetos é frequentemente utilizada em aplicações para efetivação das seguintes funções:</paragraph><paragraph></paragraph><paragraph><bullet>Comunicação remota ou inter-processo (RPC/IPC).</bullet></paragraph><paragraph><bullet>Protocolos de rede, serviços web e message brokers (conversor de mensagens de protocolo).</bullet></paragraph><paragraph><bullet>Caching/Persistência.</bullet></paragraph><paragraph><bullet>Databases, servidores de cache, sistemas de arquivos.</bullet></paragraph><paragraph><bullet>Cookies HTTP, parâmetros em formulários HTTP, tokens de autenticação em APIs.</bullet></paragraph><paragraph></paragraph><paragraph>A exploração de vulnerabilidades de desserialização envolve alta complexidade para concretização, visto que, a efetivação do ataque necessita frequentemente de modificação de procedimentos automatizados previamente divulgados e, o conhecimento prévio da linguagem de programação utilizada para processamento e execução da aplicação alvo, além das estruturas de dados – e a inicialização de seus objetos - relativas da linguagem utilizada.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>A recomendação sugerida para mitigar possíveis explorações de conteúdos serializados/desserializáveis é a remoção de funções as quais realizam desserialização de quaisquer dados manipuláveis pelo cliente (e.g. cabeçalhos e parâmetros HTTP). </paragraph><paragraph></paragraph><paragraph>Contudo, caso a remoção dos métodos não seja possível, recomenda-se as seguintes medidas: </paragraph><paragraph><bullet>Implementação de verificações de integridade: mecanismos de assinatura digital em objetos serializados para prevenir a criação/inicialização de objetos não anteriormente previstos ou a adulteração de dados.</bullet></paragraph><paragraph><bullet>Implementação de objetos de forma restritiva a fim de verificar quaisquer tipos de inicialização de tipos não permitidos em objetos serializados. Contudo, há formas relatadas de evasão da técnica descrita, portanto, a implementação unicamente desta técnica não é recomendada.</bullet></paragraph><paragraph><bullet>Execução do contexto da aplicação por usuários de privilégio restrito. Criação de arquivos de log para exceções e falhas em procedimentos de desserialização (e.g. tipo do objeto inserido não é o tipo esperado pelo método/função da aplicação; exceptions).</bullet></paragraph><paragraph><bullet>Restringir e monitorar o tráfego em rede de servidores os quais realizam desserialização.</bullet></paragraph><paragraph><bullet>Monitorar desserializações (e.g. consecutivas desserializações por determinado usuário).</bullet></paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":92,"title":"A9 2017 - Using Components with Known Vulnerabilities","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>Vulnerabilidades em bibliotecas e software de terceiros são extremamente comuns e podem ser usadas para comprometer a segurança dos sistemas que usam o software. Nos últimos anos, foram publicados aproximadamente 4500 CVEs (Common Vulnerabilities and Exposures) por ano.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Algumas recomendações para essa vulnerabilidade são:</paragraph><paragraph><bullet>Remova dependências não utilizadas, recursos, componentes, arquivos e documentação desnecessários.</bullet></paragraph><paragraph><bullet>Faça um inventário contínuo das versões dos componentes do lado do cliente e do servidor (por exemplo, estruturas, bibliotecas) e suas dependências usando ferramentas como versões, DependencyCheck, retire.js, etc.</bullet></paragraph><paragraph><bullet>Monitore continuamente fontes como CVE e NVD quanto a vulnerabilidades nos componentes. Use ferramentas de análise SCA (Software Composition Analysis) para automatizar o processo.</bullet></paragraph><paragraph><bullet>Assine alertas por email sobre vulnerabilidades de segurança relacionadas aos componentes que você usa.</bullet></paragraph><paragraph><bullet>Obtenha componentes apenas de fontes oficiais através de links seguros.</bullet></paragraph><paragraph><bullet>Prefira pacotes assinados para reduzir a chance de incluir um componente malicioso modificado.</bullet></paragraph><paragraph><bullet>Monitore bibliotecas e componentes que não são mantidos ou não criam patches de segurança para versões mais antigas. Se a correção não for possível, considere implantar uma correção virtual para monitorar, detectar ou proteger contra o problema descoberto.</bullet></paragraph><paragraph>Toda organização deve garantir que exista um plano contínuo de monitoramento, triagem e aplicação de atualizações ou alterações de configuração durante a vida útil da aplicação.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null},{"id":93,"title":"A10 2017 - Insufficient Logging &amp; Monitoring","damage":null,"reproducability":null,"exploitability":null,"affected_users":null,"discoverability":null,"dread_total":null,"effort":"Quick","type":"Network Security","overview":"<paragraph>O monitoramento insuficiente é a falta de mecanismos de monitoramento de um sistema. Através da falta desses mecanismos, atacantes podem atacar a aplicação de forma que não sejam detectados e atinjam seus objetivos. Alguns exemplos dessa vulnerabilidade é a existência de eventos auditáveis, como logins, logins com falha e transações de alto valor não serem registrados, avisos e erros que geram mensagens de log inexistentes, inadequadas ou pouco claras, testes de penetração (pentests) e varreduras por ferramentas DAST (como OWASP ZAP) que não ativam alertas, em suma, implica que a aplicação não é capaz de detectar, escalar ou alertar ataques ativos em tempo real ou quase em tempo real.</paragraph>","poc":"<paragraph></paragraph>","remediation":"<paragraph>Certifique-se de que todos os logins, falhas de controle de acesso e falhas de input do servidor possam ser registrados com contexto de usuário necessário para identificar contas suspeitas ou maliciosas e coletivas por tempo suficiente para permitir análises forenses, e que também os logs sejam gerados em um formato que possa ser facilmente consumido por soluções de gerenciamento de logs centralizadas.</paragraph><paragraph>Outra boa prática é garantir que as transações de alto valor possuam uma trilha de auditoria com controles de integridade para evitar adulteração ou exclusão, como tabelas de banco de dados apenas para anexar ou exclusão.</paragraph><paragraph>É necessário estabelecer o monitoramento e alerta eficazes para que atividades suspeitas sejam detectadas e respondidas em tempo hábil.</paragraph>","references":"<paragraph>https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring</paragraph>","approved":true,"risk":0,"affected_hosts":null,"av":null,"ac":null,"au":null,"c":null,"i":null,"a":null,"e":null,"rl":null,"rc":null,"cdp":null,"td":null,"cr":null,"ir":null,"ar":null,"cvss_base":null,"cvss_impact":null,"cvss_exploitability":null,"cvss_temporal":null,"cvss_environmental":null,"cvss_modified_impact":null,"cvss_total":null,"ease":null,"c2_vs":null,"attack_vector":null,"attack_complexity":null,"privileges_required":null,"user_interaction":null,"scope_cvss":null,"confidentiality":null,"integrity":null,"availability":null,"exploit_maturity":null,"remeditation_level":null,"report_confidence":null,"confidentiality_requirement":null,"integrity_requirement":null,"availability_requirement":null,"mod_attack_vector":null,"mod_attack_complexity":null,"mod_privileges_required":null,"mod_user_interaction":null,"mod_scope":null,"mod_confidentiality":null,"mod_integrity":null,"mod_availability":null,"cvss_base_score":null,"cvss_impact_score":null,"cvss_mod_impact_score":null,"c3_vs":null,"severity":null,"likelihood":null,"severity_rationale":null,"likelihood_rationale":null,"nist_impact":null,"nist_likelihood":null,"nist800_total":null,"impact_val":null,"likelihood_val":null,"nist_rating":null,"language":null}]